{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nvar API_URL = 'http://localhost:8082/api';\nexport var loginUser = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    axios.post('http://localhost:8082/api/auth/signin', {\n      email: email,\n      password: password\n    }).then(function (response) {\n      console.log('Success:', response.data);\n      axios.get('http://localhost:8082/api/general/role/' + email).then(function (response) {\n        var roleId = response.data;\n        console.log('Role ID:', roleId);\n      }).catch(function (error) {\n        console.error('Error:', error);\n      });\n    }).catch(function (error) {\n      console.error('Error:', error);\n    });\n  });\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","API_URL","loginUser","_ref","_asyncToGenerator","email","password","post","then","response","console","log","data","get","roleId","catch","error","_x","_x2","apply","arguments"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/auth/authService.tsx"],"sourcesContent":["// AuthService.js\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8082/api';\r\n\r\nexport const loginUser = async (email, password) => {\r\n    axios.post('http://localhost:8082/api/auth/signin', { // Replace with your API URL\r\n            email: email,\r\n            password: password,\r\n        })\r\n        .then(response => {\r\n            console.log('Success:', response.data);\r\n            // Here you can handle the response, for example save the JWT token to local storage\r\n\r\n            // After successful authentication, make a request to get the role ID\r\n            axios.get('http://localhost:8082/api/general/role/'+ email) // Replace with your API URL\r\n            .then(response => {\r\n                const roleId = response.data;\r\n                console.log('Role ID:', roleId);\r\n                // Here you can handle the role ID, for example save it to local storage\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n                // Here you can handle errors\r\n            });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n            // Here you can handle errors\r\n        });\r\n    };\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,IAAMC,OAAO,GAAG,2BAA2B;AAE3C,OAAO,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAK,EAAEC,QAAQ,EAAK;IAChDN,KAAK,CAACO,IAAI,CAAC,uCAAuC,EAAE;MAC5CF,KAAK,EAAEA,KAAK;MACZC,QAAQ,EAAEA;IACd,CAAC,CAAC,CACDE,IAAI,CAAC,UAAAC,QAAQ,EAAI;MACdC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,QAAQ,CAACG,IAAI,CAAC;MAItCZ,KAAK,CAACa,GAAG,CAAC,yCAAyC,GAAER,KAAK,CAAC,CAC1DG,IAAI,CAAC,UAAAC,QAAQ,EAAI;QACd,IAAMK,MAAM,GAAGL,QAAQ,CAACG,IAAI;QAC5BF,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEG,MAAM,CAAC;MAEnC,CAAC,CAAC,CACDC,KAAK,CAAC,UAACC,KAAK,EAAK;QACdN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAElC,CAAC,CAAC;IACN,CAAC,CAAC,CACDD,KAAK,CAAC,UAACC,KAAK,EAAK;MACdN,OAAO,CAACM,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAElC,CAAC,CAAC;EACN,CAAC;EAAA,gBAzBQd,SAASA,CAAAe,EAAA,EAAAC,GAAA;IAAA,OAAAf,IAAA,CAAAgB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAyBjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}