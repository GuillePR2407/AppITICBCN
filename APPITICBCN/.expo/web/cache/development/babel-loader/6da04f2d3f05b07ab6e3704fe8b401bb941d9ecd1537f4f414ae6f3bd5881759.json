{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Checkbox } from 'react-native-paper';\nimport { useExampleTheme } from \"../index\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxExample = function CheckboxExample() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checkedDefault = _React$useState2[0],\n    setCheckedDefault = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    checkedAndroid = _React$useState4[0],\n    setCheckedAndroid = _React$useState4[1];\n  var _React$useState5 = React.useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    checkedIOS = _React$useState6[0],\n    setCheckedIOS = _React$useState6[1];\n  var _React$useState7 = React.useState(true),\n    _React$useState8 = _slicedToArray(_React$useState7, 2),\n    checkedLeadingControl = _React$useState8[0],\n    setCheckedLeadingControl = _React$useState8[1];\n  var _React$useState9 = React.useState(true),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    checkedDisabled = _React$useState10[0],\n    setCheckedDisabled = _React$useState10[1];\n  var _React$useState11 = React.useState(true),\n    _React$useState12 = _slicedToArray(_React$useState11, 2),\n    checkedLabelVariant = _React$useState12[0],\n    setCheckedLabelVariant = _React$useState12[1];\n  var _useExampleTheme = useExampleTheme(),\n    isV3 = _useExampleTheme.isV3;\n  return _jsxs(ScreenWrapper, {\n    style: styles.container,\n    children: [_jsx(Checkbox.Item, {\n      label: \"Default (will look like whatever system this is running on)\",\n      status: checkedDefault ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setCheckedDefault(!checkedDefault);\n      }\n    }), _jsx(Checkbox.Item, {\n      label: \"Material Design\",\n      mode: \"android\",\n      status: checkedAndroid ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setCheckedAndroid(!checkedAndroid);\n      }\n    }), _jsx(Checkbox.Item, {\n      label: \"iOS\",\n      mode: \"ios\",\n      status: checkedIOS ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setCheckedIOS(!checkedIOS);\n      }\n    }), _jsx(Checkbox.Item, {\n      label: \"Default with leading control\",\n      status: checkedLeadingControl ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setCheckedLeadingControl(!checkedLeadingControl);\n      },\n      mode: \"ios\",\n      position: \"leading\"\n    }), _jsx(Checkbox.Item, {\n      label: \"Disabled checkbox\",\n      status: checkedDisabled ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setCheckedDisabled(!checkedDisabled);\n      },\n      disabled: true\n    }), isV3 && _jsx(Checkbox.Item, {\n      label: \"Default with titleLarge title variant\",\n      labelVariant: \"titleLarge\",\n      status: checkedLabelVariant ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setCheckedLabelVariant(!checkedLabelVariant);\n      }\n    })]\n  });\n};\nCheckboxExample.title = 'Checkbox Item';\nvar styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8\n  }\n});\nexport default CheckboxExample;","map":{"version":3,"names":["React","StyleSheet","Checkbox","useExampleTheme","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","CheckboxExample","_React$useState","useState","_React$useState2","_slicedToArray","checkedDefault","setCheckedDefault","_React$useState3","_React$useState4","checkedAndroid","setCheckedAndroid","_React$useState5","_React$useState6","checkedIOS","setCheckedIOS","_React$useState7","_React$useState8","checkedLeadingControl","setCheckedLeadingControl","_React$useState9","_React$useState10","checkedDisabled","setCheckedDisabled","_React$useState11","_React$useState12","checkedLabelVariant","setCheckedLabelVariant","_useExampleTheme","isV3","style","styles","container","children","Item","label","status","onPress","mode","position","disabled","labelVariant","title","create","paddingVertical"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/CheckboxItemExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport { Checkbox } from 'react-native-paper';\r\n\r\nimport { useExampleTheme } from '../index';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nconst CheckboxExample = () => {\r\n  const [checkedDefault, setCheckedDefault] = React.useState<boolean>(true);\r\n  const [checkedAndroid, setCheckedAndroid] = React.useState<boolean>(true);\r\n  const [checkedIOS, setCheckedIOS] = React.useState<boolean>(true);\r\n  const [checkedLeadingControl, setCheckedLeadingControl] =\r\n    React.useState<boolean>(true);\r\n  const [checkedDisabled, setCheckedDisabled] = React.useState<boolean>(true);\r\n  const [checkedLabelVariant, setCheckedLabelVariant] = React.useState(true);\r\n\r\n  const { isV3 } = useExampleTheme();\r\n\r\n  return (\r\n    <ScreenWrapper style={styles.container}>\r\n      <Checkbox.Item\r\n        label=\"Default (will look like whatever system this is running on)\"\r\n        status={checkedDefault ? 'checked' : 'unchecked'}\r\n        onPress={() => setCheckedDefault(!checkedDefault)}\r\n      />\r\n      <Checkbox.Item\r\n        label=\"Material Design\"\r\n        mode=\"android\"\r\n        status={checkedAndroid ? 'checked' : 'unchecked'}\r\n        onPress={() => setCheckedAndroid(!checkedAndroid)}\r\n      />\r\n      <Checkbox.Item\r\n        label=\"iOS\"\r\n        mode=\"ios\"\r\n        status={checkedIOS ? 'checked' : 'unchecked'}\r\n        onPress={() => setCheckedIOS(!checkedIOS)}\r\n      />\r\n      <Checkbox.Item\r\n        label=\"Default with leading control\"\r\n        status={checkedLeadingControl ? 'checked' : 'unchecked'}\r\n        onPress={() => setCheckedLeadingControl(!checkedLeadingControl)}\r\n        mode=\"ios\"\r\n        position=\"leading\"\r\n      />\r\n      <Checkbox.Item\r\n        label=\"Disabled checkbox\"\r\n        status={checkedDisabled ? 'checked' : 'unchecked'}\r\n        onPress={() => setCheckedDisabled(!checkedDisabled)}\r\n        disabled\r\n      />\r\n      {isV3 && (\r\n        <Checkbox.Item\r\n          label=\"Default with titleLarge title variant\"\r\n          labelVariant=\"titleLarge\"\r\n          status={checkedLabelVariant ? 'checked' : 'unchecked'}\r\n          onPress={() => setCheckedLabelVariant(!checkedLabelVariant)}\r\n        />\r\n      )}\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nCheckboxExample.title = 'Checkbox Item';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingVertical: 8,\r\n  },\r\n});\r\n\r\nexport default CheckboxExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}