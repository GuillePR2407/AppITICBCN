{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Button, ProgressBar, MD2Colors, MD3Colors, Text } from 'react-native-paper';\nimport { useExampleTheme } from \"../index\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ClassProgressBar = function (_React$Component) {\n  _inherits(ClassProgressBar, _React$Component);\n  function ClassProgressBar(props) {\n    _classCallCheck(this, ClassProgressBar);\n    return _callSuper(this, ClassProgressBar, [props]);\n  }\n  _createClass(ClassProgressBar, [{\n    key: \"render\",\n    value: function render() {\n      return _jsx(ProgressBar, _objectSpread({}, this.props));\n    }\n  }]);\n  return ClassProgressBar;\n}(React.Component);\nvar AnimatedProgressBar = Animated.createAnimatedComponent(ClassProgressBar);\nvar ProgressBarExample = function ProgressBarExample() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _React$useState3 = React.useState(0.3),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    progress = _React$useState4[0],\n    setProgress = _React$useState4[1];\n  var theme = useExampleTheme();\n  var isV3 = theme.isV3;\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n    progressBarValue = _React$useRef.current;\n  var runCustomAnimation = function runCustomAnimation() {\n    progressBarValue.setValue(0);\n    Animated.timing(progressBarValue, {\n      toValue: 1,\n      duration: 2000,\n      useNativeDriver: false\n    }).start();\n  };\n  return _jsxs(ScreenWrapper, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Button, {\n      onPress: function onPress() {\n        return setVisible(!visible);\n      },\n      children: \"Toggle visibility\"\n    }), _jsx(Button, {\n      onPress: function onPress() {\n        return setProgress(Math.random());\n      },\n      children: \"Random progress\"\n    }), _jsx(Button, {\n      onPress: runCustomAnimation,\n      children: \"Toggle animation\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"Default ProgressBar\"\n      }), _jsx(ProgressBar, {\n        progress: progress,\n        visible: visible\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"Indeterminate ProgressBar\"\n      }), _jsx(ProgressBar, {\n        indeterminate: true,\n        visible: visible\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"ProgressBar with custom color\"\n      }), _jsx(ProgressBar, {\n        progress: progress,\n        visible: visible,\n        color: isV3 ? MD3Colors.error50 : MD2Colors.red800\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"ProgressBar with custom background color\"\n      }), _jsx(ProgressBar, {\n        progress: progress,\n        visible: visible,\n        color: MD2Colors.red800,\n        style: {\n          backgroundColor: isV3 ? MD3Colors.secondary50 : MD2Colors.teal500\n        }\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"ProgressBar with custom height\"\n      }), _jsx(ProgressBar, {\n        progress: progress,\n        visible: visible,\n        style: styles.customHeight\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"ProgressBar with animated value\"\n      }), _jsx(AnimatedProgressBar, {\n        visible: visible,\n        style: styles.progressBar,\n        animatedValue: progressBarValue,\n        theme: theme\n      })]\n    }), _jsxs(View, {\n      style: [styles.row, styles.fullRow],\n      children: [_jsx(Text, {\n        variant: \"bodyMedium\",\n        children: \"ProgressBar with custom percentage height\"\n      }), _jsx(ProgressBar, {\n        style: styles.customPercentageHeight,\n        indeterminate: true,\n        visible: visible\n      })]\n    })]\n  });\n};\nProgressBarExample.title = 'Progress Bar';\nvar styles = StyleSheet.create({\n  container: {\n    padding: 16\n  },\n  row: {\n    marginVertical: 10\n  },\n  fullRow: {\n    height: '100%',\n    width: '100%'\n  },\n  customHeight: {\n    height: 20\n  },\n  customPercentageHeight: {\n    height: '50%'\n  },\n  progressBar: {\n    height: 15\n  }\n});\nexport default ProgressBarExample;","map":{"version":3,"names":["React","View","StyleSheet","Animated","Button","ProgressBar","MD2Colors","MD3Colors","Text","useExampleTheme","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","ClassProgressBar","_React$Component","_inherits","props","_classCallCheck","_callSuper","_createClass","key","value","render","_objectSpread","Component","AnimatedProgressBar","createAnimatedComponent","ProgressBarExample","_React$useState","useState","_React$useState2","_slicedToArray","visible","setVisible","_React$useState3","_React$useState4","progress","setProgress","theme","isV3","_React$useRef","useRef","Value","progressBarValue","current","runCustomAnimation","setValue","timing","toValue","duration","useNativeDriver","start","contentContainerStyle","styles","container","children","onPress","Math","random","style","row","variant","indeterminate","color","error50","red800","backgroundColor","secondary50","teal500","customHeight","progressBar","animatedValue","fullRow","customPercentageHeight","title","create","padding","marginVertical","height","width"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/ProgressBarExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { View, StyleSheet, Animated } from 'react-native';\r\n\r\nimport {\r\n  Button,\r\n  ProgressBar,\r\n  MD2Colors,\r\n  MD3Colors,\r\n  ProgressBarProps,\r\n  Text,\r\n} from 'react-native-paper';\r\n\r\nimport { useExampleTheme } from '../index';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nclass ClassProgressBar extends React.Component {\r\n  constructor(props: ProgressBarProps) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return <ProgressBar {...this.props} />;\r\n  }\r\n}\r\n\r\nconst AnimatedProgressBar = Animated.createAnimatedComponent(ClassProgressBar);\r\n\r\nconst ProgressBarExample = () => {\r\n  const [visible, setVisible] = React.useState<boolean>(true);\r\n  const [progress, setProgress] = React.useState<number>(0.3);\r\n  const theme = useExampleTheme();\r\n  const { isV3 } = theme;\r\n  const { current: progressBarValue } = React.useRef(new Animated.Value(0));\r\n\r\n  const runCustomAnimation = () => {\r\n    progressBarValue.setValue(0);\r\n    Animated.timing(progressBarValue, {\r\n      toValue: 1,\r\n      duration: 2000,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  };\r\n\r\n  return (\r\n    <ScreenWrapper contentContainerStyle={styles.container}>\r\n      <Button onPress={() => setVisible(!visible)}>Toggle visibility</Button>\r\n      <Button onPress={() => setProgress(Math.random())}>\r\n        Random progress\r\n      </Button>\r\n      <Button onPress={runCustomAnimation}>Toggle animation</Button>\r\n\r\n      <View style={styles.row}>\r\n        <Text variant=\"bodyMedium\">Default ProgressBar</Text>\r\n        <ProgressBar progress={progress} visible={visible} />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text variant=\"bodyMedium\">Indeterminate ProgressBar</Text>\r\n        <ProgressBar indeterminate visible={visible} />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text variant=\"bodyMedium\">ProgressBar with custom color</Text>\r\n        <ProgressBar\r\n          progress={progress}\r\n          visible={visible}\r\n          color={isV3 ? MD3Colors.error50 : MD2Colors.red800}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text variant=\"bodyMedium\">\r\n          ProgressBar with custom background color\r\n        </Text>\r\n        <ProgressBar\r\n          progress={progress}\r\n          visible={visible}\r\n          color={MD2Colors.red800}\r\n          style={{\r\n            backgroundColor: isV3 ? MD3Colors.secondary50 : MD2Colors.teal500,\r\n          }}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text variant=\"bodyMedium\">ProgressBar with custom height</Text>\r\n        <ProgressBar\r\n          progress={progress}\r\n          visible={visible}\r\n          style={styles.customHeight}\r\n        />\r\n      </View>\r\n\r\n      <View style={styles.row}>\r\n        <Text variant=\"bodyMedium\">ProgressBar with animated value</Text>\r\n        <AnimatedProgressBar\r\n          visible={visible}\r\n          style={styles.progressBar}\r\n          animatedValue={progressBarValue}\r\n          theme={theme}\r\n        />\r\n      </View>\r\n\r\n      <View style={[styles.row, styles.fullRow]}>\r\n        <Text variant=\"bodyMedium\">\r\n          ProgressBar with custom percentage height\r\n        </Text>\r\n        <ProgressBar\r\n          style={styles.customPercentageHeight}\r\n          indeterminate\r\n          visible={visible}\r\n        />\r\n      </View>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nProgressBarExample.title = 'Progress Bar';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    padding: 16,\r\n  },\r\n  row: {\r\n    marginVertical: 10,\r\n  },\r\n  fullRow: {\r\n    height: '100%',\r\n    width: '100%',\r\n  },\r\n  customHeight: {\r\n    height: 20,\r\n  },\r\n  customPercentageHeight: {\r\n    height: '50%',\r\n  },\r\n  progressBar: {\r\n    height: 15,\r\n  },\r\n});\r\n\r\nexport default ProgressBarExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}