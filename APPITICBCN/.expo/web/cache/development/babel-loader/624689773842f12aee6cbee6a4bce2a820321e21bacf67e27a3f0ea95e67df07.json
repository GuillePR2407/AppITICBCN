{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Caption, List, Text, Chip, Divider } from 'react-native-paper';\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListSectionExample = function ListSectionExample() {\n  return _jsxs(ScreenWrapper, {\n    children: [_jsxs(List.Section, {\n      children: [_jsx(List.Subheader, {\n        children: \"Single line\"\n      }), _jsx(List.Item, {\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"calendar\"\n          }));\n        },\n        title: \"List item 1\"\n      }), _jsx(List.Item, {\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"wallet-giftcard\"\n          }));\n        },\n        title: \"List item 2\"\n      }), _jsx(List.Item, {\n        title: \"List item 3\",\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"folder\"\n          }));\n        },\n        right: function right(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"equal\"\n          }));\n        }\n      })]\n    }), _jsx(Divider, {}), _jsxs(List.Section, {\n      children: [_jsx(List.Subheader, {\n        children: \"Two line\"\n      }), _jsx(List.Item, {\n        left: function left() {\n          return _jsx(Image, {\n            source: require(\"../../assets/images/email-icon.png\"),\n            style: styles.image,\n            accessibilityIgnoresInvertColors: true\n          });\n        },\n        title: \"List item 1\",\n        description: \"Describes item 1\"\n      }), _jsx(List.Item, {\n        left: function left() {\n          return _jsx(Image, {\n            source: require(\"../../assets/images/email-icon.png\"),\n            style: styles.image,\n            accessibilityIgnoresInvertColors: true\n          });\n        },\n        right: function right(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"information\"\n          }));\n        },\n        title: \"List item 2\",\n        description: \"Describes item 2\"\n      })]\n    }), _jsx(Divider, {}), _jsxs(List.Section, {\n      children: [_jsx(List.Subheader, {\n        children: \"Three line\"\n      }), _jsx(List.Item, {\n        left: function left() {\n          return _jsx(Image, {\n            source: require(\"../../assets/images/email-icon.png\"),\n            style: styles.image,\n            accessibilityIgnoresInvertColors: true\n          });\n        },\n        title: \"List item 1\",\n        description: \"Describes item 1. Example of a very very long description.\"\n      }), _jsx(List.Item, {\n        left: function left() {\n          return _jsx(Image, {\n            source: require(\"../../assets/images/email-icon.png\"),\n            style: styles.image,\n            accessibilityIgnoresInvertColors: true\n          });\n        },\n        right: function right(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"star-outline\"\n          }));\n        },\n        title: \"List item 2\",\n        description: \"Describes item 2. Example of a very very long description.\"\n      })]\n    }), _jsx(Divider, {}), _jsxs(List.Section, {\n      children: [_jsx(List.Subheader, {\n        children: \"Custom title and description\"\n      }), _jsx(List.Item, {\n        left: function left() {\n          return _jsx(Image, {\n            source: require(\"../../assets/images/email-icon.png\"),\n            style: styles.image,\n            accessibilityIgnoresInvertColors: true\n          });\n        },\n        right: function right(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"star-outline\"\n          }));\n        },\n        title: function title(_ref) {\n          var ellipsizeMode = _ref.ellipsizeMode,\n            titleColor = _ref.color,\n            fontSize = _ref.fontSize;\n          return _jsxs(View, {\n            style: [styles.container, styles.row, styles.customTitle],\n            children: [_jsx(Text, {\n              ellipsizeMode: ellipsizeMode,\n              style: {\n                color: titleColor,\n                fontSize: fontSize\n              },\n              children: \"List Item\"\n            }), _jsx(Caption, {\n              children: \"Yesterday\"\n            })]\n          });\n        },\n        description: function description(_ref2) {\n          var ellipsizeMode = _ref2.ellipsizeMode,\n            descriptionColor = _ref2.color,\n            fontSize = _ref2.fontSize;\n          return _jsxs(View, {\n            style: [styles.container, styles.column],\n            children: [_jsx(Text, {\n              numberOfLines: 2,\n              ellipsizeMode: ellipsizeMode,\n              style: {\n                color: descriptionColor,\n                fontSize: fontSize\n              },\n              children: \"React Native Paper is a high-quality, standard-compliant Material Design library that has you covered in all major use-cases.\"\n            }), _jsx(View, {\n              style: [styles.container, styles.row, styles.additionalPadding],\n              children: _jsx(Chip, {\n                icon: \"file-pdf-box\",\n                onPress: function onPress() {},\n                children: \"DOCS.pdf\"\n              })\n            })]\n          });\n        }\n      })]\n    })]\n  });\n};\nListSectionExample.title = 'List.Section';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  image: {\n    height: 40,\n    width: 40,\n    margin: 8\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  column: {\n    flexDirection: 'column'\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  additionalPadding: {\n    paddingTop: 8\n  }\n});\nexport default ListSectionExample;","map":{"version":3,"names":["React","StyleSheet","Image","View","Caption","List","Text","Chip","Divider","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","ListSectionExample","children","Section","Subheader","Item","left","props","Icon","_objectSpread","icon","title","right","source","require","style","styles","image","accessibilityIgnoresInvertColors","description","_ref","ellipsizeMode","titleColor","color","fontSize","container","row","customTitle","_ref2","descriptionColor","column","numberOfLines","additionalPadding","onPress","create","flex","height","width","margin","flexDirection","alignItems","justifyContent","paddingTop"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/ListSectionExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, Image, View } from 'react-native';\r\n\r\nimport { Caption, List, Text, Chip, Divider } from 'react-native-paper';\r\n\r\nimport ScreenWrapper from '../ScreenWrapper';\r\nconst ListSectionExample = () => {\r\n  return (\r\n    <ScreenWrapper>\r\n      <List.Section>\r\n        <List.Subheader>Single line</List.Subheader>\r\n        <List.Item\r\n          left={(props) => <List.Icon {...props} icon=\"calendar\" />}\r\n          title=\"List item 1\"\r\n        />\r\n        <List.Item\r\n          left={(props) => <List.Icon {...props} icon=\"wallet-giftcard\" />}\r\n          title=\"List item 2\"\r\n        />\r\n        <List.Item\r\n          title=\"List item 3\"\r\n          left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n          right={(props) => <List.Icon {...props} icon=\"equal\" />}\r\n        />\r\n      </List.Section>\r\n      <Divider />\r\n      <List.Section>\r\n        <List.Subheader>Two line</List.Subheader>\r\n        <List.Item\r\n          left={() => (\r\n            <Image\r\n              source={require('../../assets/images/email-icon.png')}\r\n              style={styles.image}\r\n              accessibilityIgnoresInvertColors\r\n            />\r\n          )}\r\n          title=\"List item 1\"\r\n          description=\"Describes item 1\"\r\n        />\r\n        <List.Item\r\n          left={() => (\r\n            <Image\r\n              source={require('../../assets/images/email-icon.png')}\r\n              style={styles.image}\r\n              accessibilityIgnoresInvertColors\r\n            />\r\n          )}\r\n          right={(props) => <List.Icon {...props} icon=\"information\" />}\r\n          title=\"List item 2\"\r\n          description=\"Describes item 2\"\r\n        />\r\n      </List.Section>\r\n      <Divider />\r\n      <List.Section>\r\n        <List.Subheader>Three line</List.Subheader>\r\n        <List.Item\r\n          left={() => (\r\n            <Image\r\n              source={require('../../assets/images/email-icon.png')}\r\n              style={styles.image}\r\n              accessibilityIgnoresInvertColors\r\n            />\r\n          )}\r\n          title=\"List item 1\"\r\n          description=\"Describes item 1. Example of a very very long description.\"\r\n        />\r\n        <List.Item\r\n          left={() => (\r\n            <Image\r\n              source={require('../../assets/images/email-icon.png')}\r\n              style={styles.image}\r\n              accessibilityIgnoresInvertColors\r\n            />\r\n          )}\r\n          right={(props) => <List.Icon {...props} icon=\"star-outline\" />}\r\n          title=\"List item 2\"\r\n          description=\"Describes item 2. Example of a very very long description.\"\r\n        />\r\n      </List.Section>\r\n      <Divider />\r\n      <List.Section>\r\n        <List.Subheader>Custom title and description</List.Subheader>\r\n        <List.Item\r\n          left={() => (\r\n            <Image\r\n              source={require('../../assets/images/email-icon.png')}\r\n              style={styles.image}\r\n              accessibilityIgnoresInvertColors\r\n            />\r\n          )}\r\n          right={(props) => <List.Icon {...props} icon=\"star-outline\" />}\r\n          title={({ ellipsizeMode, color: titleColor, fontSize }) => (\r\n            <View style={[styles.container, styles.row, styles.customTitle]}>\r\n              <Text\r\n                ellipsizeMode={ellipsizeMode}\r\n                style={{ color: titleColor, fontSize }}\r\n              >\r\n                List Item\r\n              </Text>\r\n              <Caption>Yesterday</Caption>\r\n            </View>\r\n          )}\r\n          description={({\r\n            ellipsizeMode,\r\n            color: descriptionColor,\r\n            fontSize,\r\n          }) => (\r\n            <View style={[styles.container, styles.column]}>\r\n              <Text\r\n                numberOfLines={2}\r\n                ellipsizeMode={ellipsizeMode}\r\n                style={{ color: descriptionColor, fontSize }}\r\n              >\r\n                React Native Paper is a high-quality, standard-compliant\r\n                Material Design library that has you covered in all major\r\n                use-cases.\r\n              </Text>\r\n              <View\r\n                style={[styles.container, styles.row, styles.additionalPadding]}\r\n              >\r\n                <Chip icon=\"file-pdf-box\" onPress={() => {}}>\r\n                  DOCS.pdf\r\n                </Chip>\r\n              </View>\r\n            </View>\r\n          )}\r\n        />\r\n      </List.Section>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nListSectionExample.title = 'List.Section';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n  image: {\r\n    height: 40,\r\n    width: 40,\r\n    margin: 8,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n  },\r\n  column: {\r\n    flexDirection: 'column',\r\n  },\r\n  customTitle: {\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n  },\r\n  additionalPadding: {\r\n    paddingTop: 8,\r\n  },\r\n});\r\n\r\nexport default ListSectionExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}