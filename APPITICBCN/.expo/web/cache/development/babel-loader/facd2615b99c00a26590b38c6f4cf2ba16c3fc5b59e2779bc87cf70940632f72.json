{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { jwtDecode } from 'jwt-decode';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UserContext = createContext(undefined);\nexport var useUser = function useUser() {\n  var context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\nexport var UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    userRole = _useState2[0],\n    setUserRole = _useState2[1];\n  var loadUserRoleFromStorage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var token = yield AsyncStorage.getItem('userToken');\n      if (token) {\n        try {\n          var decodedToken = jwtDecode(token);\n          setUserRole(decodedToken.role);\n        } catch (error) {\n          console.error('Error decoding token:', error);\n        }\n      }\n    });\n    return function loadUserRoleFromStorage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var saveUserToken = function () {\n    var _ref3 = _asyncToGenerator(function* (token) {\n      try {\n        yield AsyncStorage.setItem('userToken', token);\n        var decodedToken = jwtDecode(token);\n        setUserRole(decodedToken.role);\n      } catch (error) {\n        console.error('Failed to save user token to storage', error);\n      }\n    });\n    return function saveUserToken(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var clearUserToken = function () {\n    var _ref4 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem('userToken');\n        setUserRole(0);\n      } catch (error) {\n        console.error('Failed to clear user token from storage', error);\n      }\n    });\n    return function clearUserToken() {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    loadUserRoleFromStorage();\n  }, []);\n  return _jsx(UserContext.Provider, {\n    value: {\n      userRole: userRole,\n      setUserRole: setUserRole,\n      saveUserToken: saveUserToken,\n      clearUserToken: clearUserToken\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","AsyncStorage","jwtDecode","jsx","_jsx","UserContext","undefined","useUser","context","Error","UserProvider","_ref","children","_useState","_useState2","_slicedToArray","userRole","setUserRole","loadUserRoleFromStorage","_ref2","_asyncToGenerator","token","getItem","decodedToken","role","error","console","apply","arguments","saveUserToken","_ref3","setItem","_x","clearUserToken","_ref4","removeItem","Provider","value"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/context/UserContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { jwtDecode }  from 'jwt-decode';\r\n\r\ntype UserRole = 0 | 1 | 2 | 3 | 4; // 0: Logout, 1: User, 2: Alumno, 3: Profesor, 4: Admin\r\n\r\ninterface UserContextType {\r\n    userRole: UserRole;\r\n    setUserRole: (role: UserRole) => void;\r\n    saveUserToken: (token: string) => void;\r\n    clearUserToken: () => void;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const useUser = (): UserContextType => {\r\n    const context = useContext(UserContext);\r\n    if (!context) {\r\n        throw new Error('useUser must be used within a UserProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\ninterface UserProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const UserProvider: React.FC<UserProviderProps> = ({ children }) => {\r\n    const [userRole, setUserRole] = useState<UserRole>(0);\r\n\r\n    const loadUserRoleFromStorage = async () => {\r\n        const token = await AsyncStorage.getItem('userToken');\r\n        if (token) {\r\n            try {\r\n                const decodedToken: { role: UserRole } = jwtDecode(token);\r\n                setUserRole(decodedToken.role);\r\n            } catch (error) {\r\n                console.error('Error decoding token:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const saveUserToken = async (token: string) => {\r\n        try {\r\n            await AsyncStorage.setItem('userToken', token);\r\n            const decodedToken: { role: UserRole } = jwtDecode(token);\r\n            setUserRole(decodedToken.role);\r\n        } catch (error) {\r\n            console.error('Failed to save user token to storage', error);\r\n        }\r\n    };\r\n\r\n    const clearUserToken = async () => {\r\n        try {\r\n            await AsyncStorage.removeItem('userToken');\r\n            setUserRole(0); // Set user role to 0 (logout)\r\n        } catch (error) {\r\n            console.error('Failed to clear user token from storage', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadUserRoleFromStorage();\r\n    }, []);\r\n\r\n    return (\r\n        <UserContext.Provider value={{ userRole, setUserRole, saveUserToken, clearUserToken }}>\r\n            {children}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAmB,OAAO;AACxF,OAAOC,YAAY,MAAM,2CAA2C;AACpE,SAASC,SAAS,QAAS,YAAY;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAWxC,IAAMC,WAAW,GAAGR,aAAa,CAA8BS,SAAS,CAAC;AAEzE,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAA0B;EAC1C,IAAMC,OAAO,GAAGV,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EACjE;EACA,OAAOD,OAAO;AAClB,CAAC;AAMD,OAAO,IAAME,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAChE,IAAAC,SAAA,GAAgCd,QAAQ,CAAW,CAAC,CAAC;IAAAe,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,IAAMI,uBAAuB;IAAA,IAAAC,KAAA,GAAAC,iBAAA,CAAG,aAAY;MACxC,IAAMC,KAAK,SAASpB,YAAY,CAACqB,OAAO,CAAC,WAAW,CAAC;MACrD,IAAID,KAAK,EAAE;QACP,IAAI;UACA,IAAME,YAAgC,GAAGrB,SAAS,CAACmB,KAAK,CAAC;UACzDJ,WAAW,CAACM,YAAY,CAACC,IAAI,CAAC;QAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QACjD;MACJ;IACJ,CAAC;IAAA,gBAVKP,uBAAuBA,CAAA;MAAA,OAAAC,KAAA,CAAAQ,KAAA,OAAAC,SAAA;IAAA;EAAA,GAU5B;EAED,IAAMC,aAAa;IAAA,IAAAC,KAAA,GAAAV,iBAAA,CAAG,WAAOC,KAAa,EAAK;MAC3C,IAAI;QACA,MAAMpB,YAAY,CAAC8B,OAAO,CAAC,WAAW,EAAEV,KAAK,CAAC;QAC9C,IAAME,YAAgC,GAAGrB,SAAS,CAACmB,KAAK,CAAC;QACzDJ,WAAW,CAACM,YAAY,CAACC,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAChE;IACJ,CAAC;IAAA,gBARKI,aAAaA,CAAAG,EAAA;MAAA,OAAAF,KAAA,CAAAH,KAAA,OAAAC,SAAA;IAAA;EAAA,GAQlB;EAED,IAAMK,cAAc;IAAA,IAAAC,KAAA,GAAAd,iBAAA,CAAG,aAAY;MAC/B,IAAI;QACA,MAAMnB,YAAY,CAACkC,UAAU,CAAC,WAAW,CAAC;QAC1ClB,WAAW,CAAC,CAAC,CAAC;MAClB,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;MACnE;IACJ,CAAC;IAAA,gBAPKQ,cAAcA,CAAA;MAAA,OAAAC,KAAA,CAAAP,KAAA,OAAAC,SAAA;IAAA;EAAA,GAOnB;EAED5B,SAAS,CAAC,YAAM;IACZkB,uBAAuB,CAAC,CAAC;EAC7B,CAAC,EAAE,EAAE,CAAC;EAEN,OACId,IAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAE;MAAErB,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA,WAAW;MAAEY,aAAa,EAAbA,aAAa;MAAEI,cAAc,EAAdA;IAAe,CAAE;IAAArB,QAAA,EACjFA;EAAQ,CACS,CAAC;AAE/B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}