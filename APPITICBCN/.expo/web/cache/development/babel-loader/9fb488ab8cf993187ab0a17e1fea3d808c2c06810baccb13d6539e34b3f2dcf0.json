{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Card, IconButton, SegmentedButtons } from 'react-native-paper';\nimport { songsData, albumsData } from \"../../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SegmentedButtonRealCase = function SegmentedButtonRealCase() {\n  var _React$useState = React.useState('songs'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(SegmentedButtons, {\n      value: value,\n      onValueChange: setValue,\n      buttons: [{\n        value: 'songs',\n        label: 'Songs',\n        style: styles.button,\n        showSelectedCheck: true\n      }, {\n        value: 'albums',\n        label: 'Albums',\n        style: styles.button,\n        showSelectedCheck: true\n      }],\n      style: styles.group\n    }), _jsx(FlatList, {\n      data: value === 'songs' ? songsData : albumsData,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item;\n        return _jsx(Card, {\n          mode: \"contained\",\n          style: styles.card,\n          children: _jsxs(Card.Content, {\n            style: styles.content,\n            children: [_jsx(Card.Cover, {\n              style: styles.cover,\n              source: item.cover\n            }), _jsx(Card.Title, {\n              title: item.title,\n              subtitle: item.artist,\n              titleVariant: \"titleMedium\",\n              style: styles.title,\n              right: function right() {\n                return _jsx(IconButton, {\n                  icon: 'bookmark-outline'\n                });\n              }\n            })]\n          })\n        });\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 16\n  },\n  card: {\n    marginHorizontal: 16,\n    marginTop: 16\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    paddingVertical: 0\n  },\n  cover: {\n    width: 72,\n    height: 72\n  },\n  title: {\n    flexShrink: 1,\n    marginVertical: 0\n  },\n  button: {\n    flex: 1\n  },\n  group: {\n    paddingHorizontal: 20,\n    justifyContent: 'center',\n    paddingBottom: 8\n  }\n});\nSegmentedButtonRealCase.title = 'Music player';\nexport default SegmentedButtonRealCase;","map":{"version":3,"names":["React","FlatList","StyleSheet","View","Card","IconButton","SegmentedButtons","songsData","albumsData","jsx","_jsx","jsxs","_jsxs","SegmentedButtonRealCase","_React$useState","useState","_React$useState2","_slicedToArray","value","setValue","style","styles","container","children","onValueChange","buttons","label","button","showSelectedCheck","group","data","keyExtractor","item","id","renderItem","_ref","mode","card","Content","content","Cover","cover","source","Title","title","subtitle","artist","titleVariant","right","icon","create","marginVertical","marginHorizontal","marginTop","flexDirection","alignItems","paddingHorizontal","paddingVertical","width","height","flexShrink","flex","justifyContent","paddingBottom"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/Examples/SegmentedButtons/SegmentedButtonRealCase.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { FlatList, StyleSheet, View } from 'react-native';\r\n\r\nimport { Card, IconButton, SegmentedButtons } from 'react-native-paper';\r\n\r\nimport { songsData, albumsData } from '../../../utils';\r\n\r\nconst SegmentedButtonRealCase = () => {\r\n  const [value, setValue] = React.useState('songs');\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <SegmentedButtons\r\n        value={value}\r\n        onValueChange={setValue}\r\n        buttons={[\r\n          {\r\n            value: 'songs',\r\n            label: 'Songs',\r\n            style: styles.button,\r\n            showSelectedCheck: true,\r\n          },\r\n          {\r\n            value: 'albums',\r\n            label: 'Albums',\r\n            style: styles.button,\r\n            showSelectedCheck: true,\r\n          },\r\n        ]}\r\n        style={styles.group}\r\n      />\r\n      <FlatList\r\n        data={value === 'songs' ? songsData : albumsData}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={({ item }) => {\r\n          return (\r\n            <Card mode=\"contained\" style={styles.card}>\r\n              <Card.Content style={styles.content}>\r\n                <Card.Cover style={styles.cover} source={item.cover} />\r\n                <Card.Title\r\n                  title={item.title}\r\n                  subtitle={item.artist}\r\n                  titleVariant=\"titleMedium\"\r\n                  style={styles.title}\r\n                  right={() => <IconButton icon={'bookmark-outline'} />}\r\n                />\r\n              </Card.Content>\r\n            </Card>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginVertical: 16,\r\n  },\r\n  card: {\r\n    marginHorizontal: 16,\r\n    marginTop: 16,\r\n  },\r\n  content: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 0,\r\n    paddingVertical: 0,\r\n  },\r\n  cover: {\r\n    width: 72,\r\n    height: 72,\r\n  },\r\n  title: {\r\n    flexShrink: 1,\r\n    marginVertical: 0,\r\n  },\r\n  button: {\r\n    flex: 1,\r\n  },\r\n  group: {\r\n    paddingHorizontal: 20,\r\n    justifyContent: 'center',\r\n    paddingBottom: 8,\r\n  },\r\n});\r\n\r\nSegmentedButtonRealCase.title = 'Music player';\r\n\r\nexport default SegmentedButtonRealCase;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}