{"ast":null,"code":"import * as React from 'react';\nimport { Button, Portal, Dialog, MD2Colors } from 'react-native-paper';\nimport { TextComponent } from \"./DialogTextComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DialogWithDismissableBackButton = function DialogWithDismissableBackButton(_ref) {\n  var visible = _ref.visible,\n    close = _ref.close;\n  return _jsx(Portal, {\n    children: _jsxs(Dialog, {\n      onDismiss: close,\n      visible: visible,\n      dismissable: false,\n      dismissableBackButton: true,\n      children: [_jsx(Dialog.Title, {\n        children: \"Alert\"\n      }), _jsx(Dialog.Content, {\n        children: _jsx(TextComponent, {\n          children: \"This is an undismissable dialog, however you can use hardware back button to close it!\"\n        })\n      }), _jsxs(Dialog.Actions, {\n        children: [_jsx(Button, {\n          color: MD2Colors.teal500,\n          disabled: true,\n          children: \"Disagree\"\n        }), _jsx(Button, {\n          onPress: close,\n          children: \"Agree\"\n        })]\n      })]\n    })\n  });\n};\nexport default DialogWithDismissableBackButton;","map":{"version":3,"names":["React","Button","Portal","Dialog","MD2Colors","TextComponent","jsx","_jsx","jsxs","_jsxs","DialogWithDismissableBackButton","_ref","visible","close","children","onDismiss","dismissable","dismissableBackButton","Title","Content","Actions","color","teal500","disabled","onPress"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/Dialogs/DialogWithDismissableBackButton.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { Button, Portal, Dialog, MD2Colors } from 'react-native-paper';\r\n\r\nimport { TextComponent } from './DialogTextComponent';\r\n\r\nconst DialogWithDismissableBackButton = ({\r\n  visible,\r\n  close,\r\n}: {\r\n  visible: boolean;\r\n  close: () => void;\r\n}) => (\r\n  <Portal>\r\n    <Dialog\r\n      onDismiss={close}\r\n      visible={visible}\r\n      dismissable={false}\r\n      dismissableBackButton\r\n    >\r\n      <Dialog.Title>Alert</Dialog.Title>\r\n      <Dialog.Content>\r\n        <TextComponent>\r\n          This is an undismissable dialog, however you can use hardware back\r\n          button to close it!\r\n        </TextComponent>\r\n      </Dialog.Content>\r\n      <Dialog.Actions>\r\n        <Button color={MD2Colors.teal500} disabled>\r\n          Disagree\r\n        </Button>\r\n        <Button onPress={close}>Agree</Button>\r\n      </Dialog.Actions>\r\n    </Dialog>\r\n  </Portal>\r\n);\r\n\r\nexport default DialogWithDismissableBackButton;\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAE9B,SAASC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AAEtE,SAASC,aAAa;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,+BAA+B,GAAG,SAAlCA,+BAA+BA,CAAAC,IAAA;EAAA,IACnCC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAAA,OAKLN,IAAA,CAACL,MAAM;IAAAY,QAAA,EACLL,KAAA,CAACN,MAAM;MACLY,SAAS,EAAEF,KAAM;MACjBD,OAAO,EAAEA,OAAQ;MACjBI,WAAW,EAAE,KAAM;MACnBC,qBAAqB;MAAAH,QAAA,GAErBP,IAAA,CAACJ,MAAM,CAACe,KAAK;QAAAJ,QAAA,EAAC;MAAK,CAAc,CAAC,EAClCP,IAAA,CAACJ,MAAM,CAACgB,OAAO;QAAAL,QAAA,EACbP,IAAA,CAACF,aAAa;UAAAS,QAAA,EAAC;QAGf,CAAe;MAAC,CACF,CAAC,EACjBL,KAAA,CAACN,MAAM,CAACiB,OAAO;QAAAN,QAAA,GACbP,IAAA,CAACN,MAAM;UAACoB,KAAK,EAAEjB,SAAS,CAACkB,OAAQ;UAACC,QAAQ;UAAAT,QAAA,EAAC;QAE3C,CAAQ,CAAC,EACTP,IAAA,CAACN,MAAM;UAACuB,OAAO,EAAEX,KAAM;UAAAC,QAAA,EAAC;QAAK,CAAQ,CAAC;MAAA,CACxB,CAAC;IAAA,CACX;EAAC,CACH,CAAC;AAAA,CACV;AAED,eAAeJ,+BAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}