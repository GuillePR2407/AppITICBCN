{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"withScrollView\", \"style\", \"contentContainerStyle\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useExampleTheme } from \"./index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function ScreenWrapper(_ref) {\n  var children = _ref.children,\n    _ref$withScrollView = _ref.withScrollView,\n    withScrollView = _ref$withScrollView === void 0 ? true : _ref$withScrollView,\n    style = _ref.style,\n    contentContainerStyle = _ref.contentContainerStyle,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var theme = useExampleTheme();\n  var insets = useSafeAreaInsets();\n  var containerStyle = [styles.container, {\n    backgroundColor: theme.colors.background,\n    paddingBottom: insets.bottom,\n    paddingLeft: insets.left,\n    paddingRight: insets.left\n  }];\n  return _jsx(_Fragment, {\n    children: withScrollView ? _jsx(ScrollView, _objectSpread(_objectSpread({}, rest), {}, {\n      contentContainerStyle: contentContainerStyle,\n      keyboardShouldPersistTaps: \"always\",\n      alwaysBounceVertical: false,\n      showsVerticalScrollIndicator: false,\n      style: [containerStyle, style],\n      children: children\n    })) : _jsx(View, {\n      style: [containerStyle, style],\n      children: children\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","ScrollView","StyleSheet","View","useSafeAreaInsets","useExampleTheme","jsx","_jsx","Fragment","_Fragment","ScreenWrapper","_ref","children","_ref$withScrollView","withScrollView","style","contentContainerStyle","rest","_objectWithoutProperties","_excluded","theme","insets","containerStyle","styles","container","backgroundColor","colors","background","paddingBottom","bottom","paddingLeft","left","paddingRight","_objectSpread","keyboardShouldPersistTaps","alwaysBounceVertical","showsVerticalScrollIndicator","create","flex"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/ScreenWrapper.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport {\r\n  ScrollView,\r\n  ScrollViewProps,\r\n  StyleProp,\r\n  StyleSheet,\r\n  View,\r\n  ViewStyle,\r\n} from 'react-native';\r\n\r\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\r\n\r\nimport { useExampleTheme } from './index';\r\n\r\ntype Props = ScrollViewProps & {\r\n  children: React.ReactNode;\r\n  withScrollView?: boolean;\r\n  style?: StyleProp<ViewStyle>;\r\n  contentContainerStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport default function ScreenWrapper({\r\n  children,\r\n  withScrollView = true,\r\n  style,\r\n  contentContainerStyle,\r\n  ...rest\r\n}: Props) {\r\n  const theme = useExampleTheme();\r\n\r\n  const insets = useSafeAreaInsets();\r\n\r\n  const containerStyle = [\r\n    styles.container,\r\n    {\r\n      backgroundColor: theme.colors.background,\r\n      paddingBottom: insets.bottom,\r\n      paddingLeft: insets.left,\r\n      paddingRight: insets.left,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      {withScrollView ? (\r\n        <ScrollView\r\n          {...rest}\r\n          contentContainerStyle={contentContainerStyle}\r\n          keyboardShouldPersistTaps=\"always\"\r\n          alwaysBounceVertical={false}\r\n          showsVerticalScrollIndicator={false}\r\n          style={[containerStyle, style]}\r\n        >\r\n          {children}\r\n        </ScrollView>\r\n      ) : (\r\n        <View style={[containerStyle, style]}>{children}</View>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\n"],"mappings":";;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAU/B,SAASC,iBAAiB,QAAQ,gCAAgC;AAElE,SAASC,eAAe;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAS1C,eAAe,SAASC,aAAaA,CAAAC,IAAA,EAM3B;EAAA,IALRC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAAC,mBAAA,GAAAF,IAAA,CACRG,cAAc;IAAdA,cAAc,GAAAD,mBAAA,cAAG,IAAI,GAAAA,mBAAA;IACrBE,KAAK,GAAAJ,IAAA,CAALI,KAAK;IACLC,qBAAqB,GAAAL,IAAA,CAArBK,qBAAqB;IAClBC,IAAI,GAAAC,wBAAA,CAAAP,IAAA,EAAAQ,SAAA;EAEP,IAAMC,KAAK,GAAGf,eAAe,CAAC,CAAC;EAE/B,IAAMgB,MAAM,GAAGjB,iBAAiB,CAAC,CAAC;EAElC,IAAMkB,cAAc,GAAG,CACrBC,MAAM,CAACC,SAAS,EAChB;IACEC,eAAe,EAAEL,KAAK,CAACM,MAAM,CAACC,UAAU;IACxCC,aAAa,EAAEP,MAAM,CAACQ,MAAM;IAC5BC,WAAW,EAAET,MAAM,CAACU,IAAI;IACxBC,YAAY,EAAEX,MAAM,CAACU;EACvB,CAAC,CACF;EAED,OACExB,IAAA,CAAAE,SAAA;IAAAG,QAAA,EACGE,cAAc,GACbP,IAAA,CAACN,UAAU,EAAAgC,aAAA,CAAAA,aAAA,KACLhB,IAAI;MACRD,qBAAqB,EAAEA,qBAAsB;MAC7CkB,yBAAyB,EAAC,QAAQ;MAClCC,oBAAoB,EAAE,KAAM;MAC5BC,4BAA4B,EAAE,KAAM;MACpCrB,KAAK,EAAE,CAACO,cAAc,EAAEP,KAAK,CAAE;MAAAH,QAAA,EAE9BA;IAAQ,EACC,CAAC,GAEbL,IAAA,CAACJ,IAAI;MAACY,KAAK,EAAE,CAACO,cAAc,EAAEP,KAAK,CAAE;MAAAH,QAAA,EAAEA;IAAQ,CAAO;EACvD,CACD,CAAC;AAEP;AAEA,IAAMW,MAAM,GAAGrB,UAAU,CAACmC,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE;EACR;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}