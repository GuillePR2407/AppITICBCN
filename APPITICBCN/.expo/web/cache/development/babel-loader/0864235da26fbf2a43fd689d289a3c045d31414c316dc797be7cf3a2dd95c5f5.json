{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Snackbar, Button } from 'react-native-paper';\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SnackbarExample = function SnackbarExample() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  return _jsxs(ScreenWrapper, {\n    contentContainerStyle: styles.container,\n    children: [_jsx(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return setVisible(!visible);\n      },\n      children: visible ? 'Hide' : 'Show'\n    }), _jsx(Snackbar, {\n      visible: visible,\n      onDismiss: function onDismiss() {\n        return setVisible(false);\n      },\n      action: {\n        label: 'Undo',\n        onPress: function onPress() {}\n      },\n      duration: Snackbar.DURATION_MEDIUM,\n      children: \"Hey there! I'm a Snackbar.\"\n    })]\n  });\n};\nSnackbarExample.title = 'Snackbar';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default SnackbarExample;","map":{"version":3,"names":["React","StyleSheet","Snackbar","Button","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","SnackbarExample","_React$useState","useState","_React$useState2","_slicedToArray","visible","setVisible","contentContainerStyle","styles","container","children","mode","onPress","onDismiss","action","label","duration","DURATION_MEDIUM","title","create","flex","alignItems","justifyContent"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/SnackbarExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Snackbar, Button } from 'react-native-paper';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nconst SnackbarExample = () => {\r\n  const [visible, setVisible] = React.useState<boolean>(false);\r\n\r\n  return (\r\n    <ScreenWrapper contentContainerStyle={styles.container}>\r\n      <Button mode=\"outlined\" onPress={() => setVisible(!visible)}>\r\n        {visible ? 'Hide' : 'Show'}\r\n      </Button>\r\n      <Snackbar\r\n        visible={visible}\r\n        onDismiss={() => setVisible(false)}\r\n        action={{\r\n          label: 'Undo',\r\n          onPress: () => {\r\n            // Do something\r\n          },\r\n        }}\r\n        duration={Snackbar.DURATION_MEDIUM}\r\n      >\r\n        Hey there! I&apos;m a Snackbar.\r\n      </Snackbar>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nSnackbarExample.title = 'Snackbar';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n\r\nexport default SnackbarExample;\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE/B,SAASC,QAAQ,EAAEC,MAAM,QAAQ,oBAAoB;AACrD,OAAOC,aAAa;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,eAAA,GAA8BV,KAAK,CAACW,QAAQ,CAAU,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAArDI,OAAO,GAAAF,gBAAA;IAAEG,UAAU,GAAAH,gBAAA;EAE1B,OACEJ,KAAA,CAACJ,aAAa;IAACY,qBAAqB,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GACrDb,IAAA,CAACH,MAAM;MAACiB,IAAI,EAAC,UAAU;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMN,UAAU,CAAC,CAACD,OAAO,CAAC;MAAA,CAAC;MAAAK,QAAA,EACzDL,OAAO,GAAG,MAAM,GAAG;IAAM,CACpB,CAAC,EACTR,IAAA,CAACJ,QAAQ;MACPY,OAAO,EAAEA,OAAQ;MACjBQ,SAAS,EAAE,SAAAA,UAAA;QAAA,OAAMP,UAAU,CAAC,KAAK,CAAC;MAAA,CAAC;MACnCQ,MAAM,EAAE;QACNC,KAAK,EAAE,MAAM;QACbH,OAAO,EAAE,SAAAA,QAAA,EAAM,CAEf;MACF,CAAE;MACFI,QAAQ,EAAEvB,QAAQ,CAACwB,eAAgB;MAAAP,QAAA,EACpC;IAED,CAAU,CAAC;EAAA,CACE,CAAC;AAEpB,CAAC;AAEDV,eAAe,CAACkB,KAAK,GAAG,UAAU;AAElC,IAAMV,MAAM,GAAGhB,UAAU,CAAC2B,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,IAAI,EAAE,CAAC;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAetB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}