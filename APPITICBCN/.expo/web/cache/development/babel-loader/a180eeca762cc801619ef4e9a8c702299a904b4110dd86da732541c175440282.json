{"ast":null,"code":"import * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getHeaderTitle } from '@react-navigation/elements';\nimport { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport { Appbar } from 'react-native-paper';\nimport { useUser } from \"./context/UserContext\";\nimport NewsSection from \"./Sections/NewsSection\";\nimport Login from \"./Login\";\nimport NoticiaItem from \"./items/NoticiaItem\";\nimport TramitsSection from \"./Sections/TramitsSection\";\nimport InfoSection from \"./Sections/InfoSection\";\nimport InfoItem from \"./items/InfoItem\";\nimport TramitsItem from \"./items/TramitsItem\";\nimport Register from \"./Register\";\nimport QualificacionsSection from \"./Sections/QualificacionsSection\";\nimport AddUsersSection from \"./Sections/AddUsersSection\";\nimport UsersSection from \"./Sections/UsersSection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function Root() {\n  var cardStyleInterpolator = Platform.OS === 'android' ? CardStyleInterpolators.forFadeFromBottomAndroid : CardStyleInterpolators.forHorizontalIOS;\n  var _useUser = useUser(),\n    userRole = _useUser.userRole,\n    setUserRole = _useUser.setUserRole;\n  var initialRouteName = userRole === 4 ? 'AddUsersSection' : 'NewsSection';\n  var handleLogout = function handleLogout() {\n    setUserRole(0);\n  };\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: initialRouteName,\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation,\n        route = _ref.route;\n      return {\n        detachPreviousScreen: !navigation.isFocused(),\n        cardStyleInterpolator: cardStyleInterpolator,\n        header: function header(_ref2) {\n          var navigation = _ref2.navigation,\n            route = _ref2.route,\n            options = _ref2.options,\n            back = _ref2.back;\n          var title = getHeaderTitle(options, route.name);\n          var excludedScreens = ['Login', 'NoticiaItem', 'InfoItem', 'TramitsItem', 'Register'];\n          var isExcludedScreen = excludedScreens.includes(route.name);\n          return _jsxs(Appbar.Header, {\n            style: {\n              justifyContent: 'space-between'\n            },\n            elevated: true,\n            children: [!isExcludedScreen && navigation.openDrawer ? _jsx(Appbar.Action, {\n              icon: \"menu\",\n              isLeading: true,\n              onPress: function onPress() {\n                return navigation.openDrawer();\n              }\n            }) : back ? _jsx(Appbar.BackAction, {\n              onPress: function onPress() {\n                return navigation.goBack();\n              }\n            }) : null, _jsx(Appbar.Content, {\n              title: title,\n              style: {\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                justifyContent: 'center',\n                alignItems: 'center'\n              }\n            })]\n          });\n        }\n      };\n    },\n    children: [userRole === 4 ? _jsx(Stack.Screen, {\n      name: \"AddUsersSection\",\n      component: AddUsersSection,\n      options: {\n        title: 'Afegir usuaris'\n      }\n    }) : _jsx(Stack.Screen, {\n      name: \"NewsSection\",\n      component: NewsSection,\n      options: {\n        title: 'Noticies'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        title: 'Login'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: Register,\n      options: {\n        title: 'Registre'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NoticiaItem\",\n      component: NoticiaItem,\n      options: {\n        title: 'Noticia'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TramitsSection\",\n      component: TramitsSection,\n      options: {\n        title: 'Tràmits'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TramitsItem\",\n      component: TramitsItem,\n      options: {\n        title: 'Tràmits'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"InfoSection\",\n      component: InfoSection,\n      options: {\n        title: 'Informació'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"InfoItem\",\n      component: InfoItem,\n      options: {\n        title: 'Informació'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"QualificacionsSection\",\n      component: QualificacionsSection,\n      options: {\n        title: 'Qualificacions'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"UsersSection\",\n      component: UsersSection,\n      options: {\n        title: 'Usuaris'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","Platform","getHeaderTitle","CardStyleInterpolators","createStackNavigator","Appbar","useUser","NewsSection","Login","NoticiaItem","TramitsSection","InfoSection","InfoItem","TramitsItem","Register","QualificacionsSection","AddUsersSection","UsersSection","jsx","_jsx","jsxs","_jsxs","Stack","Root","cardStyleInterpolator","OS","forFadeFromBottomAndroid","forHorizontalIOS","_useUser","userRole","setUserRole","initialRouteName","handleLogout","Navigator","screenOptions","_ref","navigation","route","detachPreviousScreen","isFocused","header","_ref2","options","back","title","name","excludedScreens","isExcludedScreen","includes","Header","style","justifyContent","elevated","children","openDrawer","Action","icon","isLeading","onPress","BackAction","goBack","Content","position","left","right","alignItems","Screen","component"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/RootNavigator.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Platform } from 'react-native';\r\n\r\nimport type { DrawerNavigationProp } from '@react-navigation/drawer';\r\nimport { getHeaderTitle } from '@react-navigation/elements';\r\nimport {\r\n  CardStyleInterpolators,\r\n  createStackNavigator,\r\n} from '@react-navigation/stack';\r\nimport { Appbar } from 'react-native-paper';\r\nimport Logo from './components/Logo';\r\nimport LogoPetit from './components/LogoPetit';\r\n\r\nimport { useUser } from './context/UserContext';\r\n\r\nimport NewsSection from './Sections/NewsSection';\r\nimport Login from './Login';\r\nimport NoticiaItem from './items/NoticiaItem';\r\nimport TramitsSection from './Sections/TramitsSection';\r\nimport InfoSection from './Sections/InfoSection';\r\nimport InfoItem from './items/InfoItem';\r\nimport TramitsItem from './items/TramitsItem';\r\nimport Register from './Register';\r\nimport QualificacionsSection from './Sections/QualificacionsSection';\r\nimport AddUsersSection from './Sections/AddUsersSection';\r\nimport UsersSection from './Sections/UsersSection';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Root() {\r\n  const cardStyleInterpolator =\r\n    Platform.OS === 'android'\r\n      ? CardStyleInterpolators.forFadeFromBottomAndroid\r\n      : CardStyleInterpolators.forHorizontalIOS;\r\n\r\n  const { userRole, setUserRole } = useUser(); \r\n\r\n  const initialRouteName = userRole === 4 ? 'AddUsersSection' : 'NewsSection'; \r\n\r\n  const handleLogout = () => {\r\n      setUserRole(0);\r\n  };\r\n\r\n  return (\r\n    <Stack.Navigator\r\n      initialRouteName={initialRouteName}\r\n      screenOptions={({ navigation, route }) => ({\r\n        detachPreviousScreen: !navigation.isFocused(),\r\n        cardStyleInterpolator,\r\n        header: ({ navigation, route, options, back }) => {\r\n          const title = getHeaderTitle(options, route.name);\r\n          const excludedScreens = ['Login', 'NoticiaItem', 'InfoItem', 'TramitsItem', 'Register'];\r\n          const isExcludedScreen = excludedScreens.includes(route.name);\r\n          return (\r\n            <Appbar.Header style={{ justifyContent: 'space-between' }} elevated>\r\n              {!isExcludedScreen && (navigation as any).openDrawer ? (\r\n                <Appbar.Action\r\n                  icon=\"menu\"\r\n                  isLeading\r\n                  onPress={() => (navigation as any as DrawerNavigationProp<{}>).openDrawer()}\r\n                />\r\n              ) : back ? (\r\n                <Appbar.BackAction onPress={() => navigation.goBack()} />\r\n              ) : null}\r\n              <Appbar.Content title={title} style={{ position: 'absolute', left: 0, right: 0, justifyContent: 'center', alignItems: 'center' }} />\r\n            </Appbar.Header>\r\n          );\r\n        },\r\n      })}\r\n    >\r\n      {userRole === 4 ? ( \r\n        <Stack.Screen name=\"AddUsersSection\" component={AddUsersSection} \r\n        options={{\r\n          title: 'Afegir usuaris',\r\n        }} />\r\n      ) : (\r\n        <Stack.Screen name=\"NewsSection\" component={NewsSection} \r\n        options={{\r\n          title: 'Noticies',\r\n        }} />)}\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={Login}\r\n        options={{\r\n          title: 'Login',\r\n      }}/>\r\n      <Stack.Screen\r\n        name=\"Register\"\r\n        component={Register}\r\n        options={{\r\n          title: 'Registre',\r\n      }}/>\r\n      <Stack.Screen\r\n        name=\"NoticiaItem\"\r\n        component={NoticiaItem}\r\n        options={{\r\n          title: 'Noticia',\r\n      }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"TramitsSection\"\r\n        component={TramitsSection}\r\n        options={{\r\n          title: 'Tràmits',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"TramitsItem\"\r\n        component={TramitsItem}\r\n        options={{\r\n          title: 'Tràmits',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"InfoSection\"\r\n        component={InfoSection}\r\n        options={{\r\n          title: 'Informació',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"InfoItem\"\r\n        component={InfoItem}\r\n        options={{\r\n          title: 'Informació',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"QualificacionsSection\"\r\n        component={QualificacionsSection}\r\n        options={{\r\n          title: 'Qualificacions',\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"UsersSection\"\r\n        component={UsersSection}\r\n        options={{\r\n          title: 'Usuaris',\r\n        }}\r\n      />\r\n\r\n    </Stack.Navigator>\r\n  );\r\n}"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAI/B,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SACEC,sBAAsB,EACtBC,oBAAoB,QACf,yBAAyB;AAChC,SAASC,MAAM,QAAQ,oBAAoB;AAI3C,SAASC,OAAO;AAEhB,OAAOC,WAAW;AAClB,OAAOC,KAAK;AACZ,OAAOC,WAAW;AAClB,OAAOC,cAAc;AACrB,OAAOC,WAAW;AAClB,OAAOC,QAAQ;AACf,OAAOC,WAAW;AAClB,OAAOC,QAAQ;AACf,OAAOC,qBAAqB;AAC5B,OAAOC,eAAe;AACtB,OAAOC,YAAY;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEnD,IAAMC,KAAK,GAAGlB,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASmB,IAAIA,CAAA,EAAG;EAC7B,IAAMC,qBAAqB,GACzBvB,QAAQ,CAACwB,EAAE,KAAK,SAAS,GACrBtB,sBAAsB,CAACuB,wBAAwB,GAC/CvB,sBAAsB,CAACwB,gBAAgB;EAE7C,IAAAC,QAAA,GAAkCtB,OAAO,CAAC,CAAC;IAAnCuB,QAAQ,GAAAD,QAAA,CAARC,QAAQ;IAAEC,WAAW,GAAAF,QAAA,CAAXE,WAAW;EAE7B,IAAMC,gBAAgB,GAAGF,QAAQ,KAAK,CAAC,GAAG,iBAAiB,GAAG,aAAa;EAE3E,IAAMG,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACvBF,WAAW,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,OACET,KAAA,CAACC,KAAK,CAACW,SAAS;IACdF,gBAAgB,EAAEA,gBAAiB;IACnCG,aAAa,EAAE,SAAAA,cAAAC,IAAA;MAAA,IAAGC,UAAU,GAAAD,IAAA,CAAVC,UAAU;QAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;MAAA,OAAQ;QACzCC,oBAAoB,EAAE,CAACF,UAAU,CAACG,SAAS,CAAC,CAAC;QAC7Cf,qBAAqB,EAArBA,qBAAqB;QACrBgB,MAAM,EAAE,SAAAA,OAAAC,KAAA,EAA0C;UAAA,IAAvCL,UAAU,GAAAK,KAAA,CAAVL,UAAU;YAAEC,KAAK,GAAAI,KAAA,CAALJ,KAAK;YAAEK,OAAO,GAAAD,KAAA,CAAPC,OAAO;YAAEC,IAAI,GAAAF,KAAA,CAAJE,IAAI;UACzC,IAAMC,KAAK,GAAG1C,cAAc,CAACwC,OAAO,EAAEL,KAAK,CAACQ,IAAI,CAAC;UACjD,IAAMC,eAAe,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,UAAU,EAAE,aAAa,EAAE,UAAU,CAAC;UACvF,IAAMC,gBAAgB,GAAGD,eAAe,CAACE,QAAQ,CAACX,KAAK,CAACQ,IAAI,CAAC;UAC7D,OACExB,KAAA,CAAChB,MAAM,CAAC4C,MAAM;YAACC,KAAK,EAAE;cAAEC,cAAc,EAAE;YAAgB,CAAE;YAACC,QAAQ;YAAAC,QAAA,GAChE,CAACN,gBAAgB,IAAKX,UAAU,CAASkB,UAAU,GAClDnC,IAAA,CAACd,MAAM,CAACkD,MAAM;cACZC,IAAI,EAAC,MAAM;cACXC,SAAS;cACTC,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAOtB,UAAU,CAAqCkB,UAAU,CAAC,CAAC;cAAA;YAAC,CAC7E,CAAC,GACAX,IAAI,GACNxB,IAAA,CAACd,MAAM,CAACsD,UAAU;cAACD,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMtB,UAAU,CAACwB,MAAM,CAAC,CAAC;cAAA;YAAC,CAAE,CAAC,GACvD,IAAI,EACRzC,IAAA,CAACd,MAAM,CAACwD,OAAO;cAACjB,KAAK,EAAEA,KAAM;cAACM,KAAK,EAAE;gBAAEY,QAAQ,EAAE,UAAU;gBAAEC,IAAI,EAAE,CAAC;gBAAEC,KAAK,EAAE,CAAC;gBAAEb,cAAc,EAAE,QAAQ;gBAAEc,UAAU,EAAE;cAAS;YAAE,CAAE,CAAC;UAAA,CACvH,CAAC;QAEpB;MACF,CAAC;IAAA,CAAE;IAAAZ,QAAA,GAEFxB,QAAQ,KAAK,CAAC,GACbV,IAAA,CAACG,KAAK,CAAC4C,MAAM;MAACrB,IAAI,EAAC,iBAAiB;MAACsB,SAAS,EAAEnD,eAAgB;MAChE0B,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CAAE,CAAC,GAELzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MAACrB,IAAI,EAAC,aAAa;MAACsB,SAAS,EAAE5D,WAAY;MACxDmC,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CAAE,CAAE,EACRzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,OAAO;MACZsB,SAAS,EAAE3D,KAAM;MACjBkC,OAAO,EAAE;QACPE,KAAK,EAAE;MACX;IAAE,CAAC,CAAC,EACJzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,UAAU;MACfsB,SAAS,EAAErD,QAAS;MACpB4B,OAAO,EAAE;QACPE,KAAK,EAAE;MACX;IAAE,CAAC,CAAC,EACJzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,aAAa;MAClBsB,SAAS,EAAE1D,WAAY;MACvBiC,OAAO,EAAE;QACPE,KAAK,EAAE;MACX;IAAE,CACD,CAAC,EACFzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,gBAAgB;MACrBsB,SAAS,EAAEzD,cAAe;MAC1BgC,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,aAAa;MAClBsB,SAAS,EAAEtD,WAAY;MACvB6B,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,aAAa;MAClBsB,SAAS,EAAExD,WAAY;MACvB+B,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,UAAU;MACfsB,SAAS,EAAEvD,QAAS;MACpB8B,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,uBAAuB;MAC5BsB,SAAS,EAAEpD,qBAAsB;MACjC2B,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACFzB,IAAA,CAACG,KAAK,CAAC4C,MAAM;MACXrB,IAAI,EAAC,cAAc;MACnBsB,SAAS,EAAElD,YAAa;MACxByB,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC;EAAA,CAEa,CAAC;AAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}