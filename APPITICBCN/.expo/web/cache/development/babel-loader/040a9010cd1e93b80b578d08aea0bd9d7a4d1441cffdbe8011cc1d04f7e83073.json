{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { createContext, useContext, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UserContext = createContext(undefined);\nexport var useUser = function useUser() {\n  var context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\nexport var UserProvider = function UserProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    userRole = _useState2[0],\n    setUserRole = _useState2[1];\n  return _jsx(UserContext.Provider, {\n    value: {\n      userRole: userRole,\n      setUserRole: setUserRole\n    },\n    children: children\n  });\n};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","UserContext","undefined","useUser","context","Error","UserProvider","_ref","children","_useState","_useState2","_slicedToArray","userRole","setUserRole","Provider","value"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/UserContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\ntype UserRole = 1 | 2 | 3 | 4; // 1: Logout, 2: Alumno, 3: Profesor, 4: Admin\r\n\r\ninterface UserContextType {\r\n    userRole: UserRole;\r\n    setUserRole: (role: UserRole) => void;\r\n}\r\n\r\nconst UserContext = createContext<UserContextType | undefined>(undefined);\r\n\r\nexport const useUser = (): UserContextType => {\r\n    const context = useContext(UserContext);\r\n    if (!context) {\r\n        throw new Error('useUser must be used within a UserProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\ninterface UserProviderProps {\r\n    children: ReactNode;\r\n}\r\n\r\nexport const UserProvider: React.FC<UserProviderProps> = ({ children }) => {\r\n    const [userRole, setUserRole] = useState<UserRole>(1);\r\n\r\n    return (\r\n    <UserContext.Provider value={{ userRole, setUserRole }}>\r\n        {children}\r\n    </UserContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAS9E,IAAMC,WAAW,GAAGL,aAAa,CAA8BM,SAAS,CAAC;AAEzE,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAA0B;EAC1C,IAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EACjE;EACA,OAAOD,OAAO;AAClB,CAAC;AAMD,OAAO,IAAME,YAAyC,GAAG,SAA5CA,YAAyCA,CAAAC,IAAA,EAAqB;EAAA,IAAfC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;EAChE,IAAAC,SAAA,GAAgCX,QAAQ,CAAW,CAAC,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA9CG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAE5B,OACAV,IAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEH,QAAQ,EAARA,QAAQ;MAAEC,WAAW,EAAXA;IAAY,CAAE;IAAAL,QAAA,EAClDA;EAAQ,CACS,CAAC;AAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}