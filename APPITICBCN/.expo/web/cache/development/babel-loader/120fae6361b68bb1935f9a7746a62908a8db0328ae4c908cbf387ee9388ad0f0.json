{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { List, Text } from 'react-native-paper';\nimport { getAllUsers } from \"../services/adminService\";\nimport { PreferencesContext } from \"../index\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar UsersSection = function UsersSection() {\n  var _React$useState = React.useState([]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    users = _React$useState2[0],\n    setUsers = _React$useState2[1];\n  var _React$useState3 = React.useState(new Set()),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    expandedIds = _React$useState4[0],\n    setExpandedIds = _React$useState4[1];\n  var _React$useContext = React.useContext(PreferencesContext),\n    theme = _React$useContext.theme;\n  var handlePress = function handlePress(id) {\n    var newSet = new Set(expandedIds);\n    if (newSet.has(id)) {\n      newSet.delete(id);\n    } else {\n      newSet.add(id);\n    }\n    setExpandedIds(newSet);\n  };\n  React.useEffect(function () {\n    getAllUsers().then(setUsers).catch(console.error);\n  }, []);\n  return _jsx(ScrollView, {\n    style: {\n      padding: 20\n    },\n    children: users.map(function (user) {\n      return _jsx(View, {\n        style: {\n          backgroundColor: theme.colors.listItem,\n          margin: 15,\n          marginTop: 15,\n          marginBottom: 0,\n          borderRadius: 10,\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.23,\n          shadowRadius: 2.62,\n          elevation: 4\n        },\n        children: _jsxs(List.Accordion, {\n          title: user.username,\n          expanded: expandedIds.has(user.id),\n          onPress: function onPress() {\n            return handlePress(user.id);\n          },\n          style: {\n            backgroundColor: theme.colors.listItem,\n            borderRadius: 10,\n            borderBottomEndRadius: expandedIds.has(user.id) ? 0 : 10,\n            borderBottomStartRadius: expandedIds.has(user.id) ? 0 : 10\n          },\n          children: [_jsxs(Text, {\n            style: {\n              padding: 10,\n              color: theme.colors.primary,\n              fontSize: 18\n            },\n            children: [\"Email: \", user.email]\n          }), _jsxs(Text, {\n            style: {\n              padding: 10,\n              color: theme.colors.primary,\n              fontSize: 18\n            },\n            children: [\"Role: \", user.role.name]\n          })]\n        })\n      }, user.id);\n    })\n  });\n};\nexport default UsersSection;","map":{"version":3,"names":["React","ScrollView","View","List","Text","getAllUsers","PreferencesContext","jsxs","_jsxs","jsx","_jsx","UsersSection","_React$useState","useState","_React$useState2","_slicedToArray","users","setUsers","_React$useState3","Set","_React$useState4","expandedIds","setExpandedIds","_React$useContext","useContext","theme","handlePress","id","newSet","has","delete","add","useEffect","then","catch","console","error","style","padding","children","map","user","backgroundColor","colors","listItem","margin","marginTop","marginBottom","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","Accordion","title","username","expanded","onPress","borderBottomEndRadius","borderBottomStartRadius","color","primary","fontSize","email","role","name"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Sections/UsersSection.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List, Text, useTheme } from 'react-native-paper';\r\nimport { getAllUsers } from '../services/adminService';\r\nimport { PreferencesContext } from '../index';\r\n\r\nconst UsersSection = () => {\r\n    const [users, setUsers] = React.useState([]);\r\n    const [expandedIds, setExpandedIds] = React.useState(new Set());\r\n    const { theme } = React.useContext(PreferencesContext);\r\n\r\n    const handlePress = (id) => {\r\n        const newSet = new Set(expandedIds);\r\n        if (newSet.has(id)) {\r\n            newSet.delete(id);\r\n        } else {\r\n            newSet.add(id);\r\n        }\r\n        setExpandedIds(newSet);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        getAllUsers().then(setUsers).catch(console.error);\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView style={{ padding: 20 }}>\r\n            {users.map((user) => (\r\n                <View\r\n                    key={user.id}\r\n                    style={{\r\n                        backgroundColor: theme.colors.listItem,\r\n                        margin: 15,\r\n                        marginTop: 15,\r\n                        marginBottom: 0,\r\n                        borderRadius: 10,\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.23,\r\n                        shadowRadius: 2.62,\r\n                        elevation: 4,\r\n                    }}\r\n                >\r\n                    <List.Accordion\r\n                        title={user.username}\r\n                        expanded={expandedIds.has(user.id)}\r\n                        onPress={() => handlePress(user.id)}\r\n                        style={{\r\n                            backgroundColor: theme.colors.listItem,\r\n                            borderRadius: 10,\r\n                            borderBottomEndRadius: expandedIds.has(user.id) ? 0 : 10,\r\n                            borderBottomStartRadius: expandedIds.has(user.id) ? 0 : 10,\r\n                        }}\r\n                    >\r\n                        <Text style={{ padding: 10, color: theme.colors.primary, fontSize: 18 }}>\r\n                            Email: {user.email}\r\n                        </Text>\r\n                        <Text style={{ padding: 10, color: theme.colors.primary, fontSize: 18 }}>\r\n                            Role: {user.role.name}\r\n                        </Text>\r\n                    </List.Accordion>\r\n                </View>\r\n            ))}\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nexport default UsersSection;\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAE/B,SAASC,IAAI,EAAEC,IAAI,QAAkB,oBAAoB;AACzD,SAASC,WAAW;AACpB,SAASC,kBAAkB;AAAmB,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE9C,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EACvB,IAAAC,eAAA,GAA0BZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAArCI,KAAK,GAAAF,gBAAA;IAAEG,QAAQ,GAAAH,gBAAA;EACtB,IAAAI,gBAAA,GAAsClB,KAAK,CAACa,QAAQ,CAAC,IAAIM,GAAG,CAAC,CAAC,CAAC;IAAAC,gBAAA,GAAAL,cAAA,CAAAG,gBAAA;IAAxDG,WAAW,GAAAD,gBAAA;IAAEE,cAAc,GAAAF,gBAAA;EAClC,IAAAG,iBAAA,GAAkBvB,KAAK,CAACwB,UAAU,CAAClB,kBAAkB,CAAC;IAA9CmB,KAAK,GAAAF,iBAAA,CAALE,KAAK;EAEb,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,EAAE,EAAK;IACxB,IAAMC,MAAM,GAAG,IAAIT,GAAG,CAACE,WAAW,CAAC;IACnC,IAAIO,MAAM,CAACC,GAAG,CAACF,EAAE,CAAC,EAAE;MAChBC,MAAM,CAACE,MAAM,CAACH,EAAE,CAAC;IACrB,CAAC,MAAM;MACHC,MAAM,CAACG,GAAG,CAACJ,EAAE,CAAC;IAClB;IACAL,cAAc,CAACM,MAAM,CAAC;EAC1B,CAAC;EAED5B,KAAK,CAACgC,SAAS,CAAC,YAAM;IAClB3B,WAAW,CAAC,CAAC,CAAC4B,IAAI,CAAChB,QAAQ,CAAC,CAACiB,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EACrD,CAAC,EAAE,EAAE,CAAC;EAEN,OACI1B,IAAA,CAACT,UAAU;IAACoC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,EAC9BvB,KAAK,CAACwB,GAAG,CAAC,UAACC,IAAI;MAAA,OACZ/B,IAAA,CAACR,IAAI;QAEDmC,KAAK,EAAE;UACHK,eAAe,EAAEjB,KAAK,CAACkB,MAAM,CAACC,QAAQ;UACtCC,MAAM,EAAE,EAAE;UACVC,SAAS,EAAE,EAAE;UACbC,YAAY,EAAE,CAAC;UACfC,YAAY,EAAE,EAAE;UAChBC,WAAW,EAAE,MAAM;UACnBC,YAAY,EAAE;YAAEC,KAAK,EAAE,CAAC;YAAEC,MAAM,EAAE;UAAE,CAAC;UACrCC,aAAa,EAAE,IAAI;UACnBC,YAAY,EAAE,IAAI;UAClBC,SAAS,EAAE;QACf,CAAE;QAAAhB,QAAA,EAEF/B,KAAA,CAACL,IAAI,CAACqD,SAAS;UACXC,KAAK,EAAEhB,IAAI,CAACiB,QAAS;UACrBC,QAAQ,EAAEtC,WAAW,CAACQ,GAAG,CAACY,IAAI,CAACd,EAAE,CAAE;UACnCiC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMlC,WAAW,CAACe,IAAI,CAACd,EAAE,CAAC;UAAA,CAAC;UACpCU,KAAK,EAAE;YACHK,eAAe,EAAEjB,KAAK,CAACkB,MAAM,CAACC,QAAQ;YACtCI,YAAY,EAAE,EAAE;YAChBa,qBAAqB,EAAExC,WAAW,CAACQ,GAAG,CAACY,IAAI,CAACd,EAAE,CAAC,GAAG,CAAC,GAAG,EAAE;YACxDmC,uBAAuB,EAAEzC,WAAW,CAACQ,GAAG,CAACY,IAAI,CAACd,EAAE,CAAC,GAAG,CAAC,GAAG;UAC5D,CAAE;UAAAY,QAAA,GAEF/B,KAAA,CAACJ,IAAI;YAACiC,KAAK,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEyB,KAAK,EAAEtC,KAAK,CAACkB,MAAM,CAACqB,OAAO;cAAEC,QAAQ,EAAE;YAAG,CAAE;YAAA1B,QAAA,GAAC,SAC9D,EAACE,IAAI,CAACyB,KAAK;UAAA,CAChB,CAAC,EACP1D,KAAA,CAACJ,IAAI;YAACiC,KAAK,EAAE;cAAEC,OAAO,EAAE,EAAE;cAAEyB,KAAK,EAAEtC,KAAK,CAACkB,MAAM,CAACqB,OAAO;cAAEC,QAAQ,EAAE;YAAG,CAAE;YAAA1B,QAAA,GAAC,QAC/D,EAACE,IAAI,CAAC0B,IAAI,CAACC,IAAI;UAAA,CACnB,CAAC;QAAA,CACK;MAAC,GA/BZ3B,IAAI,CAACd,EAgCR,CAAC;IAAA,CACV;EAAC,CACM,CAAC;AAErB,CAAC;AAED,eAAehB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}