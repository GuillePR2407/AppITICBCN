{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { DataTable, Card } from 'react-native-paper';\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DataTableExample = function DataTableExample() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    sortAscending = _React$useState2[0],\n    setSortAscending = _React$useState2[1];\n  var _React$useState3 = React.useState(0),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    page = _React$useState4[0],\n    setPage = _React$useState4[1];\n  var _React$useState5 = React.useState([{\n      key: 1,\n      name: 'Cupcake',\n      calories: 356,\n      fat: 16\n    }, {\n      key: 2,\n      name: 'Eclair',\n      calories: 262,\n      fat: 16\n    }, {\n      key: 3,\n      name: 'Frozen yogurt',\n      calories: 159,\n      fat: 6\n    }, {\n      key: 4,\n      name: 'Gingerbread',\n      calories: 305,\n      fat: 3.7\n    }, {\n      key: 5,\n      name: 'Ice cream sandwich',\n      calories: 237,\n      fat: 9\n    }, {\n      key: 6,\n      name: 'Jelly Bean',\n      calories: 375,\n      fat: 0\n    }]),\n    _React$useState6 = _slicedToArray(_React$useState5, 1),\n    items = _React$useState6[0];\n  var _React$useState7 = React.useState([2, 3, 4, 200]),\n    _React$useState8 = _slicedToArray(_React$useState7, 1),\n    numberOfItemsPerPageList = _React$useState8[0];\n  var _React$useState9 = React.useState(numberOfItemsPerPageList[0]),\n    _React$useState10 = _slicedToArray(_React$useState9, 2),\n    itemsPerPage = _React$useState10[0],\n    onItemsPerPageChange = _React$useState10[1];\n  var sortedItems = items.slice().sort(function (item1, item2) {\n    return sortAscending ? item1.name.localeCompare(item2.name) : item2.name.localeCompare(item1.name);\n  });\n  var from = page * itemsPerPage;\n  var to = Math.min((page + 1) * itemsPerPage, items.length);\n  React.useEffect(function () {\n    setPage(0);\n  }, [itemsPerPage]);\n  return _jsx(ScreenWrapper, {\n    contentContainerStyle: styles.content,\n    children: _jsx(Card, {\n      children: _jsxs(DataTable, {\n        children: [_jsxs(DataTable.Header, {\n          children: [_jsx(DataTable.Title, {\n            sortDirection: sortAscending ? 'ascending' : 'descending',\n            onPress: function onPress() {\n              return setSortAscending(!sortAscending);\n            },\n            style: styles.first,\n            children: \"Dessert\"\n          }), _jsx(DataTable.Title, {\n            numberOfLines: 2,\n            numeric: true,\n            children: \"Calories per piece\"\n          }), _jsx(DataTable.Title, {\n            numeric: true,\n            children: \"Fat (g)\"\n          })]\n        }), sortedItems.slice(from, to).map(function (item) {\n          return _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              style: styles.first,\n              children: item.name\n            }), _jsx(DataTable.Cell, {\n              numeric: true,\n              children: item.calories\n            }), _jsx(DataTable.Cell, {\n              numeric: true,\n              children: item.fat\n            })]\n          }, item.key);\n        }), _jsx(DataTable.Pagination, {\n          page: page,\n          numberOfPages: Math.ceil(sortedItems.length / itemsPerPage),\n          onPageChange: function onPageChange(page) {\n            return setPage(page);\n          },\n          label: `${from + 1}-${to} of ${sortedItems.length}`,\n          numberOfItemsPerPageList: numberOfItemsPerPageList,\n          numberOfItemsPerPage: itemsPerPage,\n          onItemsPerPageChange: onItemsPerPageChange,\n          showFastPaginationControls: true,\n          selectPageDropdownLabel: 'Rows per page'\n        })]\n      })\n    })\n  });\n};\nDataTableExample.title = 'Data Table';\nvar styles = StyleSheet.create({\n  content: {\n    padding: 8\n  },\n  first: {\n    flex: 2\n  }\n});\nexport default DataTableExample;","map":{"version":3,"names":["React","StyleSheet","DataTable","Card","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","DataTableExample","_React$useState","useState","_React$useState2","_slicedToArray","sortAscending","setSortAscending","_React$useState3","_React$useState4","page","setPage","_React$useState5","key","name","calories","fat","_React$useState6","items","_React$useState7","_React$useState8","numberOfItemsPerPageList","_React$useState9","_React$useState10","itemsPerPage","onItemsPerPageChange","sortedItems","slice","sort","item1","item2","localeCompare","from","to","Math","min","length","useEffect","contentContainerStyle","styles","content","children","Header","Title","sortDirection","onPress","style","first","numberOfLines","numeric","map","item","Row","Cell","Pagination","numberOfPages","ceil","onPageChange","label","numberOfItemsPerPage","showFastPaginationControls","selectPageDropdownLabel","title","create","padding","flex"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/Examples/DataTableExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport { DataTable, Card } from 'react-native-paper';\r\n\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\ntype ItemsState = Array<{\r\n  key: number;\r\n  name: string;\r\n  calories: number;\r\n  fat: number;\r\n}>;\r\n\r\nconst DataTableExample = () => {\r\n  const [sortAscending, setSortAscending] = React.useState<boolean>(true);\r\n  const [page, setPage] = React.useState<number>(0);\r\n  const [items] = React.useState<ItemsState>([\r\n    {\r\n      key: 1,\r\n      name: 'Cupcake',\r\n      calories: 356,\r\n      fat: 16,\r\n    },\r\n    {\r\n      key: 2,\r\n      name: 'Eclair',\r\n      calories: 262,\r\n      fat: 16,\r\n    },\r\n    {\r\n      key: 3,\r\n      name: 'Frozen yogurt',\r\n      calories: 159,\r\n      fat: 6,\r\n    },\r\n    {\r\n      key: 4,\r\n      name: 'Gingerbread',\r\n      calories: 305,\r\n      fat: 3.7,\r\n    },\r\n    {\r\n      key: 5,\r\n      name: 'Ice cream sandwich',\r\n      calories: 237,\r\n      fat: 9,\r\n    },\r\n    {\r\n      key: 6,\r\n      name: 'Jelly Bean',\r\n      calories: 375,\r\n      fat: 0,\r\n    },\r\n  ]);\r\n  const [numberOfItemsPerPageList] = React.useState([2, 3, 4, 200]);\r\n  const [itemsPerPage, onItemsPerPageChange] = React.useState(\r\n    numberOfItemsPerPageList[0]\r\n  );\r\n  const sortedItems = items\r\n    .slice()\r\n    .sort((item1, item2) =>\r\n      sortAscending\r\n        ? item1.name.localeCompare(item2.name)\r\n        : item2.name.localeCompare(item1.name)\r\n    );\r\n  const from = page * itemsPerPage;\r\n  const to = Math.min((page + 1) * itemsPerPage, items.length);\r\n\r\n  React.useEffect(() => {\r\n    setPage(0);\r\n  }, [itemsPerPage]);\r\n\r\n  return (\r\n    <ScreenWrapper contentContainerStyle={styles.content}>\r\n      <Card>\r\n        <DataTable>\r\n          <DataTable.Header>\r\n            <DataTable.Title\r\n              sortDirection={sortAscending ? 'ascending' : 'descending'}\r\n              onPress={() => setSortAscending(!sortAscending)}\r\n              style={styles.first}\r\n            >\r\n              Dessert\r\n            </DataTable.Title>\r\n            <DataTable.Title numberOfLines={2} numeric>\r\n              Calories per piece\r\n            </DataTable.Title>\r\n            <DataTable.Title numeric>Fat (g)</DataTable.Title>\r\n          </DataTable.Header>\r\n\r\n          {sortedItems.slice(from, to).map((item) => (\r\n            <DataTable.Row key={item.key}>\r\n              <DataTable.Cell style={styles.first}>{item.name}</DataTable.Cell>\r\n              <DataTable.Cell numeric>{item.calories}</DataTable.Cell>\r\n              <DataTable.Cell numeric>{item.fat}</DataTable.Cell>\r\n            </DataTable.Row>\r\n          ))}\r\n\r\n          <DataTable.Pagination\r\n            page={page}\r\n            numberOfPages={Math.ceil(sortedItems.length / itemsPerPage)}\r\n            onPageChange={(page) => setPage(page)}\r\n            label={`${from + 1}-${to} of ${sortedItems.length}`}\r\n            numberOfItemsPerPageList={numberOfItemsPerPageList}\r\n            numberOfItemsPerPage={itemsPerPage}\r\n            onItemsPerPageChange={onItemsPerPageChange}\r\n            showFastPaginationControls\r\n            selectPageDropdownLabel={'Rows per page'}\r\n          />\r\n        </DataTable>\r\n      </Card>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nDataTableExample.title = 'Data Table';\r\n\r\nconst styles = StyleSheet.create({\r\n  content: {\r\n    padding: 8,\r\n  },\r\n  first: {\r\n    flex: 2,\r\n  },\r\n});\r\n\r\nexport default DataTableExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}