{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { List, PaperProvider, Banner } from 'react-native-paper';\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ThemeExample = function ThemeExample(_ref) {\n  var navigation = _ref.navigation;\n  return _jsx(PaperProvider, {\n    children: _jsxs(ScreenWrapper, {\n      contentContainerStyle: styles.container,\n      children: [_jsx(Banner, {\n        visible: true,\n        children: \"React Native Paper automatically adapts theme based on system preferences. Please change system theme to dark/light to see the effect\"\n      }), _jsx(List.Section, {\n        title: `Theme based on the source color`,\n        children: _jsx(List.Item, {\n          title: \"Themed Sport App\",\n          description: \"Go to the example\",\n          onPress: function onPress() {\n            return navigation.navigate('teamsList');\n          },\n          right: function right(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"arrow-right\"\n            }));\n          }\n        })\n      })]\n    })\n  });\n};\nThemeExample.title = 'Theme';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  }\n});\nexport default ThemeExample;","map":{"version":3,"names":["React","StyleSheet","List","PaperProvider","Banner","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","ThemeExample","_ref","navigation","children","contentContainerStyle","styles","container","visible","Section","title","Item","description","onPress","navigate","right","props","Icon","_objectSpread","icon","create","flex"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/ThemeExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\n\r\nimport type { StackNavigationProp } from '@react-navigation/stack';\r\nimport { List, PaperProvider, Banner } from 'react-native-paper';\r\n\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<{ [key: string]: undefined }>;\r\n};\r\n\r\nconst ThemeExample = ({ navigation }: Props) => {\r\n  return (\r\n    <PaperProvider>\r\n      <ScreenWrapper contentContainerStyle={styles.container}>\r\n        <Banner visible>\r\n          React Native Paper automatically adapts theme based on system\r\n          preferences. Please change system theme to dark/light to see the\r\n          effect\r\n        </Banner>\r\n        <List.Section title={`Theme based on the source color`}>\r\n          <List.Item\r\n            title=\"Themed Sport App\"\r\n            description=\"Go to the example\"\r\n            onPress={() => navigation.navigate('teamsList')}\r\n            right={(props) => <List.Icon {...props} icon=\"arrow-right\" />}\r\n          />\r\n        </List.Section>\r\n      </ScreenWrapper>\r\n    </PaperProvider>\r\n  );\r\n};\r\nThemeExample.title = 'Theme';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n  },\r\n});\r\nexport default ThemeExample;\r\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAI/B,SAASC,IAAI,EAAEC,aAAa,EAAEC,MAAM,QAAQ,oBAAoB;AAEhE,OAAOC,aAAa;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAM7C,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA,EAA8B;EAAA,IAAxBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;EAChC,OACEL,IAAA,CAACJ,aAAa;IAAAU,QAAA,EACZJ,KAAA,CAACJ,aAAa;MAACS,qBAAqB,EAAEC,MAAM,CAACC,SAAU;MAAAH,QAAA,GACrDN,IAAA,CAACH,MAAM;QAACa,OAAO;QAAAJ,QAAA,EAAC;MAIhB,CAAQ,CAAC,EACTN,IAAA,CAACL,IAAI,CAACgB,OAAO;QAACC,KAAK,EAAG,iCAAiC;QAAAN,QAAA,EACrDN,IAAA,CAACL,IAAI,CAACkB,IAAI;UACRD,KAAK,EAAC,kBAAkB;UACxBE,WAAW,EAAC,mBAAmB;UAC/BC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMV,UAAU,CAACW,QAAQ,CAAC,WAAW,CAAC;UAAA,CAAC;UAChDC,KAAK,EAAE,SAAAA,MAACC,KAAK;YAAA,OAAKlB,IAAA,CAACL,IAAI,CAACwB,IAAI,EAAAC,aAAA,CAAAA,aAAA,KAAKF,KAAK;cAAEG,IAAI,EAAC;YAAa,EAAE,CAAC;UAAA;QAAC,CAC/D;MAAC,CACU,CAAC;IAAA,CACF;EAAC,CACH,CAAC;AAEpB,CAAC;AACDlB,YAAY,CAACS,KAAK,GAAG,OAAO;AAE5B,IAAMJ,MAAM,GAAGd,UAAU,CAAC4B,MAAM,CAAC;EAC/Bb,SAAS,EAAE;IACTc,IAAI,EAAE;EACR;AACF,CAAC,CAAC;AACF,eAAepB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}