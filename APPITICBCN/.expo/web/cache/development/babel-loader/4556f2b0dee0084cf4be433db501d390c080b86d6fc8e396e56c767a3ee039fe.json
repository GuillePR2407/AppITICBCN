{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { List } from 'react-native-paper';\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListAccordionGroupExample = function ListAccordionGroupExample() {\n  var _React$useState = React.useState(undefined),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    expandedId = _React$useState2[0],\n    setExpandedId = _React$useState2[1];\n  var _onAccordionPress = function _onAccordionPress(newExpandedId) {\n    return expandedId === newExpandedId ? setExpandedId(undefined) : setExpandedId(newExpandedId);\n  };\n  return _jsxs(ScreenWrapper, {\n    children: [_jsx(List.AccordionGroup, {\n      children: _jsxs(List.Section, {\n        title: \"Uncontrolled Accordion Group example\",\n        children: [_jsxs(List.Accordion, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"folder\"\n            }));\n          },\n          title: \"Expandable list item\",\n          id: \"1\",\n          children: [_jsx(List.Item, {\n            title: \"List item 1\"\n          }), _jsx(List.Item, {\n            title: \"List item 2\"\n          })]\n        }), _jsx(List.Accordion, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"folder\"\n            }));\n          },\n          title: \"Expandable list item 2\",\n          id: \"2\",\n          children: _jsx(List.Item, {\n            title: \"List item 1\"\n          })\n        }), _jsx(List.Accordion, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"folder\"\n            }));\n          },\n          title: \"Expandable list item 2\",\n          id: \"3\",\n          children: _jsx(List.Item, {\n            title: \"Another item\"\n          })\n        })]\n      })\n    }), _jsx(List.AccordionGroup, {\n      expandedId: expandedId,\n      onAccordionPress: _onAccordionPress,\n      children: _jsxs(List.Section, {\n        title: \"Controlled Accordion Group example\",\n        children: [_jsxs(List.Accordion, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"folder\"\n            }));\n          },\n          title: \"Expandable list item\",\n          id: \"1\",\n          children: [_jsx(List.Item, {\n            title: \"List item 1\"\n          }), _jsx(List.Item, {\n            title: \"List item 2\"\n          })]\n        }), _jsx(List.Accordion, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"folder\"\n            }));\n          },\n          title: \"Expandable list item 2\",\n          id: \"2\",\n          children: _jsx(List.Item, {\n            title: \"List item 1\"\n          })\n        }), _jsx(List.Accordion, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"folder\"\n            }));\n          },\n          title: \"Expandable list item 2\",\n          id: \"3\",\n          children: _jsx(List.Item, {\n            title: \"Another item\"\n          })\n        })]\n      })\n    })]\n  });\n};\nListAccordionGroupExample.title = 'List.AccordionGroup';\nexport default ListAccordionGroupExample;","map":{"version":3,"names":["React","List","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","ListAccordionGroupExample","_React$useState","useState","undefined","_React$useState2","_slicedToArray","expandedId","setExpandedId","_onAccordionPress","newExpandedId","children","AccordionGroup","Section","title","Accordion","left","props","Icon","_objectSpread","icon","id","Item","onAccordionPress"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/Examples/ListAccordionGroupExample.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { List } from 'react-native-paper';\r\n\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\ntype State = string | number | undefined;\r\n\r\nconst ListAccordionGroupExample = () => {\r\n  const [expandedId, setExpandedId] = React.useState<State>(undefined);\r\n\r\n  const _onAccordionPress = (newExpandedId: string | number) =>\r\n    expandedId === newExpandedId\r\n      ? setExpandedId(undefined)\r\n      : setExpandedId(newExpandedId);\r\n\r\n  return (\r\n    <ScreenWrapper>\r\n      <List.AccordionGroup>\r\n        <List.Section title=\"Uncontrolled Accordion Group example\">\r\n          <List.Accordion\r\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n            title=\"Expandable list item\"\r\n            id=\"1\"\r\n          >\r\n            <List.Item title=\"List item 1\" />\r\n            <List.Item title=\"List item 2\" />\r\n          </List.Accordion>\r\n          <List.Accordion\r\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n            title=\"Expandable list item 2\"\r\n            id=\"2\"\r\n          >\r\n            <List.Item title=\"List item 1\" />\r\n          </List.Accordion>\r\n          <List.Accordion\r\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n            title=\"Expandable list item 2\"\r\n            id=\"3\"\r\n          >\r\n            <List.Item title=\"Another item\" />\r\n          </List.Accordion>\r\n        </List.Section>\r\n      </List.AccordionGroup>\r\n      <List.AccordionGroup\r\n        expandedId={expandedId}\r\n        onAccordionPress={_onAccordionPress}\r\n      >\r\n        <List.Section title=\"Controlled Accordion Group example\">\r\n          <List.Accordion\r\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n            title=\"Expandable list item\"\r\n            id=\"1\"\r\n          >\r\n            <List.Item title=\"List item 1\" />\r\n            <List.Item title=\"List item 2\" />\r\n          </List.Accordion>\r\n          <List.Accordion\r\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n            title=\"Expandable list item 2\"\r\n            id=\"2\"\r\n          >\r\n            <List.Item title=\"List item 1\" />\r\n          </List.Accordion>\r\n          <List.Accordion\r\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n            title=\"Expandable list item 2\"\r\n            id=\"3\"\r\n          >\r\n            <List.Item title=\"Another item\" />\r\n          </List.Accordion>\r\n        </List.Section>\r\n      </List.AccordionGroup>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nListAccordionGroupExample.title = 'List.AccordionGroup';\r\n\r\nexport default ListAccordionGroupExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}