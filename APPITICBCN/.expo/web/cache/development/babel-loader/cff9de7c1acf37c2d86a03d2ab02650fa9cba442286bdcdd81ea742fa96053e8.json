{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Badge, IconButton, List, MD2Colors, MD3Colors, Text, Switch } from 'react-native-paper';\nimport { useExampleTheme } from \"../index\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar BadgeExample = function BadgeExample() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  var _useExampleTheme = useExampleTheme(),\n    isV3 = _useExampleTheme.isV3;\n  return _jsxs(ScreenWrapper, {\n    children: [_jsxs(View, {\n      style: [styles.row, styles.item],\n      children: [_jsx(Text, {\n        style: styles.label,\n        variant: \"bodyMedium\",\n        children: \"Show badges\"\n      }), _jsx(Switch, {\n        value: visible,\n        onValueChange: function onValueChange(visible) {\n          return setVisible(visible);\n        }\n      })]\n    }), _jsx(List.Section, {\n      title: \"Text\",\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.item,\n          children: [_jsx(IconButton, {\n            icon: \"palette-swatch\",\n            size: 36,\n            style: styles.button\n          }), _jsx(Badge, {\n            visible: visible,\n            style: styles.badge,\n            children: \"12\"\n          })]\n        }), _jsxs(View, {\n          style: styles.item,\n          children: [_jsx(IconButton, {\n            icon: \"inbox\",\n            size: 36,\n            style: styles.button\n          }), _jsx(Badge, {\n            visible: visible,\n            style: [styles.badge, {\n              backgroundColor: isV3 ? MD3Colors.primary80 : MD2Colors.blue500\n            }],\n            children: \"999+\"\n          })]\n        })]\n      })\n    }), _jsx(List.Section, {\n      title: \"Dot\",\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsxs(View, {\n          style: styles.item,\n          children: [_jsx(IconButton, {\n            icon: \"book-open\",\n            size: 36,\n            style: styles.button\n          }), _jsx(Badge, {\n            visible: visible,\n            style: styles.badge,\n            size: isV3 ? 6 : 8\n          })]\n        }), _jsxs(View, {\n          style: styles.item,\n          children: [_jsx(IconButton, {\n            icon: \"receipt\",\n            size: 36,\n            style: styles.button\n          }), _jsx(Badge, {\n            visible: visible,\n            style: styles.badge,\n            size: isV3 ? 6 : 8\n          })]\n        })]\n      })\n    })]\n  });\n};\nBadgeExample.title = 'Badge';\nvar styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  item: {\n    margin: 16\n  },\n  button: {\n    opacity: 0.6\n  },\n  badge: {\n    position: 'absolute',\n    top: 4,\n    right: 0\n  },\n  label: {\n    flex: 1\n  }\n});\nexport default BadgeExample;","map":{"version":3,"names":["React","StyleSheet","View","Badge","IconButton","List","MD2Colors","MD3Colors","Text","Switch","useExampleTheme","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","BadgeExample","_React$useState","useState","_React$useState2","_slicedToArray","visible","setVisible","_useExampleTheme","isV3","children","style","styles","row","item","label","variant","value","onValueChange","Section","title","icon","size","button","badge","backgroundColor","primary80","blue500","create","flexDirection","flexWrap","margin","opacity","position","top","right","flex"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/BadgeExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nimport {\r\n  Badge,\r\n  IconButton,\r\n  List,\r\n  MD2Colors,\r\n  MD3Colors,\r\n  Text,\r\n  Switch,\r\n} from 'react-native-paper';\r\n\r\nimport { useExampleTheme } from '../index';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nconst BadgeExample = () => {\r\n  const [visible, setVisible] = React.useState<boolean>(true);\r\n  const { isV3 } = useExampleTheme();\r\n\r\n  return (\r\n    <ScreenWrapper>\r\n      <View style={[styles.row, styles.item]}>\r\n        <Text style={styles.label} variant=\"bodyMedium\">\r\n          Show badges\r\n        </Text>\r\n        <Switch\r\n          value={visible}\r\n          onValueChange={(visible) => setVisible(visible)}\r\n        />\r\n      </View>\r\n      <List.Section title=\"Text\">\r\n        <View style={styles.row}>\r\n          <View style={styles.item}>\r\n            <IconButton icon=\"palette-swatch\" size={36} style={styles.button} />\r\n            <Badge visible={visible} style={styles.badge}>\r\n              12\r\n            </Badge>\r\n          </View>\r\n          <View style={styles.item}>\r\n            <IconButton icon=\"inbox\" size={36} style={styles.button} />\r\n            <Badge\r\n              visible={visible}\r\n              style={[\r\n                styles.badge,\r\n                {\r\n                  backgroundColor: isV3\r\n                    ? MD3Colors.primary80\r\n                    : MD2Colors.blue500,\r\n                },\r\n              ]}\r\n            >\r\n              999+\r\n            </Badge>\r\n          </View>\r\n        </View>\r\n      </List.Section>\r\n      <List.Section title=\"Dot\">\r\n        <View style={styles.row}>\r\n          <View style={styles.item}>\r\n            <IconButton icon=\"book-open\" size={36} style={styles.button} />\r\n            <Badge visible={visible} style={styles.badge} size={isV3 ? 6 : 8} />\r\n          </View>\r\n          <View style={styles.item}>\r\n            <IconButton icon=\"receipt\" size={36} style={styles.button} />\r\n            <Badge visible={visible} style={styles.badge} size={isV3 ? 6 : 8} />\r\n          </View>\r\n        </View>\r\n      </List.Section>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nBadgeExample.title = 'Badge';\r\n\r\nconst styles = StyleSheet.create({\r\n  row: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  item: {\r\n    margin: 16,\r\n  },\r\n  button: {\r\n    opacity: 0.6,\r\n  },\r\n  badge: {\r\n    position: 'absolute',\r\n    top: 4,\r\n    right: 0,\r\n  },\r\n  label: {\r\n    flex: 1,\r\n  },\r\n});\r\n\r\nexport default BadgeExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}