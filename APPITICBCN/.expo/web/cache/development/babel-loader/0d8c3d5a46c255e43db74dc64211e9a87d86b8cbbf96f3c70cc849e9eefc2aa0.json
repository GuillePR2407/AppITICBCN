{"ast":null,"code":"import * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Button, Portal, Dialog, MD3Colors } from 'react-native-paper';\nimport { TextComponent } from \"./DialogTextComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DialogWithIcon = function DialogWithIcon(_ref) {\n  var visible = _ref.visible,\n    close = _ref.close;\n  return _jsx(Portal, {\n    children: _jsxs(Dialog, {\n      onDismiss: close,\n      visible: visible,\n      children: [_jsx(Dialog.Icon, {\n        icon: \"alert\"\n      }), _jsx(Dialog.Title, {\n        style: styles.title,\n        children: \"Dialog with Icon\"\n      }), _jsx(Dialog.Content, {\n        children: _jsx(TextComponent, {\n          children: \"This is a dialog with new component called DialogIcon. When icon is displayed you should center the header.\"\n        })\n      }), _jsxs(Dialog.Actions, {\n        children: [_jsx(Button, {\n          onPress: close,\n          color: MD3Colors.error50,\n          children: \"Disagree\"\n        }), _jsx(Button, {\n          onPress: close,\n          children: \"Agree\"\n        })]\n      })]\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  title: {\n    textAlign: 'center'\n  }\n});\nexport default DialogWithIcon;","map":{"version":3,"names":["React","StyleSheet","Button","Portal","Dialog","MD3Colors","TextComponent","jsx","_jsx","jsxs","_jsxs","DialogWithIcon","_ref","visible","close","children","onDismiss","Icon","icon","Title","style","styles","title","Content","Actions","onPress","color","error50","create","textAlign"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/Examples/Dialogs/DialogWithIcon.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet } from 'react-native';\r\nimport { Button, Portal, Dialog, MD3Colors } from 'react-native-paper';\r\nimport { TextComponent } from './DialogTextComponent';\r\n\r\nconst DialogWithIcon = ({\r\n  visible,\r\n  close,\r\n}: {\r\n  visible: boolean;\r\n  close: () => void;\r\n}) => {\r\n  return (\r\n    <Portal>\r\n      <Dialog onDismiss={close} visible={visible}>\r\n        <Dialog.Icon icon=\"alert\" />\r\n        <Dialog.Title style={styles.title}>Dialog with Icon</Dialog.Title>\r\n        <Dialog.Content>\r\n          <TextComponent>\r\n            This is a dialog with new component called DialogIcon. When icon is\r\n            displayed you should center the header.\r\n          </TextComponent>\r\n        </Dialog.Content>\r\n        <Dialog.Actions>\r\n          <Button onPress={close} color={MD3Colors.error50}>\r\n            Disagree\r\n          </Button>\r\n          <Button onPress={close}>Agree</Button>\r\n        </Dialog.Actions>\r\n      </Dialog>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  title: {\r\n    textAlign: 'center',\r\n  },\r\n});\r\nexport default DialogWithIcon;\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAE/B,SAASC,MAAM,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AACtE,SAASC,aAAa;AAAgC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAAC,IAAA,EAMd;EAAA,IALJC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IACPC,KAAK,GAAAF,IAAA,CAALE,KAAK;EAKL,OACEN,IAAA,CAACL,MAAM;IAAAY,QAAA,EACLL,KAAA,CAACN,MAAM;MAACY,SAAS,EAAEF,KAAM;MAACD,OAAO,EAAEA,OAAQ;MAAAE,QAAA,GACzCP,IAAA,CAACJ,MAAM,CAACa,IAAI;QAACC,IAAI,EAAC;MAAO,CAAE,CAAC,EAC5BV,IAAA,CAACJ,MAAM,CAACe,KAAK;QAACC,KAAK,EAAEC,MAAM,CAACC,KAAM;QAAAP,QAAA,EAAC;MAAgB,CAAc,CAAC,EAClEP,IAAA,CAACJ,MAAM,CAACmB,OAAO;QAAAR,QAAA,EACbP,IAAA,CAACF,aAAa;UAAAS,QAAA,EAAC;QAGf,CAAe;MAAC,CACF,CAAC,EACjBL,KAAA,CAACN,MAAM,CAACoB,OAAO;QAAAT,QAAA,GACbP,IAAA,CAACN,MAAM;UAACuB,OAAO,EAAEX,KAAM;UAACY,KAAK,EAAErB,SAAS,CAACsB,OAAQ;UAAAZ,QAAA,EAAC;QAElD,CAAQ,CAAC,EACTP,IAAA,CAACN,MAAM;UAACuB,OAAO,EAAEX,KAAM;UAAAC,QAAA,EAAC;QAAK,CAAQ,CAAC;MAAA,CACxB,CAAC;IAAA,CACX;EAAC,CACH,CAAC;AAEb,CAAC;AAED,IAAMM,MAAM,GAAGpB,UAAU,CAAC2B,MAAM,CAAC;EAC/BN,KAAK,EAAE;IACLO,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AACF,eAAelB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}