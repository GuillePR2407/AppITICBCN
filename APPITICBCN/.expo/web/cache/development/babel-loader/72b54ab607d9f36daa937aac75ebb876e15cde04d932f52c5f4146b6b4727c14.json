{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport { List, Divider } from 'react-native-paper';\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListAccordionExample = function ListAccordionExample() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    expanded = _React$useState2[0],\n    setExpanded = _React$useState2[1];\n  var _handlePress = function _handlePress() {\n    setExpanded(!expanded);\n  };\n  return _jsxs(ScreenWrapper, {\n    children: [_jsxs(List.Section, {\n      title: \"Expandable list item\",\n      children: [_jsxs(List.Accordion, {\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"folder\"\n          }));\n        },\n        title: \"Expandable list item\",\n        children: [_jsx(List.Item, {\n          title: \"List item 1\"\n        }), _jsx(List.Item, {\n          title: \"List item 2\"\n        })]\n      }), _jsx(List.Accordion, {\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"folder\"\n          }));\n        },\n        title: \"Start expanded\",\n        expanded: expanded,\n        onPress: _handlePress,\n        children: _jsx(List.Item, {\n          title: \"List item 1\"\n        })\n      })]\n    }), _jsx(Divider, {}), _jsx(List.Section, {\n      title: \"Expandable & multiline list item\",\n      children: _jsxs(List.Accordion, {\n        title: \"Expandable list item\",\n        description: \"Describes the expandable list item\",\n        children: [_jsx(List.Item, {\n          title: \"List item 1\"\n        }), _jsx(List.Item, {\n          title: \"List item 2\"\n        })]\n      })\n    }), _jsx(Divider, {}), _jsx(List.Section, {\n      title: \"Expandable list with icons\",\n      children: _jsxs(List.Accordion, {\n        left: function left(props) {\n          return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n            icon: \"star\"\n          }));\n        },\n        title: \"Accordion item 1\",\n        children: [_jsx(List.Item, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"thumb-up\"\n            }));\n          },\n          title: \"List item 1\"\n        }), _jsx(List.Item, {\n          left: function left(props) {\n            return _jsx(List.Icon, _objectSpread(_objectSpread({}, props), {}, {\n              icon: \"thumb-down\"\n            }));\n          },\n          title: \"List item 2\"\n        })]\n      })\n    })]\n  });\n};\nListAccordionExample.title = 'List.Accordion';\nexport default ListAccordionExample;","map":{"version":3,"names":["React","List","Divider","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","ListAccordionExample","_React$useState","useState","_React$useState2","_slicedToArray","expanded","setExpanded","_handlePress","children","Section","title","Accordion","left","props","Icon","_objectSpread","icon","Item","onPress","description"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/ListAccordionExample.tsx"],"sourcesContent":["import * as React from 'react';\r\n\r\nimport { List, Divider } from 'react-native-paper';\r\n\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nconst ListAccordionExample = () => {\r\n  const [expanded, setExpanded] = React.useState<boolean>(true);\r\n\r\n  const _handlePress = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  return (\r\n    <ScreenWrapper>\r\n      <List.Section title=\"Expandable list item\">\r\n        <List.Accordion\r\n          left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n          title=\"Expandable list item\"\r\n        >\r\n          <List.Item title=\"List item 1\" />\r\n          <List.Item title=\"List item 2\" />\r\n        </List.Accordion>\r\n        <List.Accordion\r\n          left={(props) => <List.Icon {...props} icon=\"folder\" />}\r\n          title=\"Start expanded\"\r\n          expanded={expanded}\r\n          onPress={_handlePress}\r\n        >\r\n          <List.Item title=\"List item 1\" />\r\n        </List.Accordion>\r\n      </List.Section>\r\n      <Divider />\r\n      <List.Section title=\"Expandable & multiline list item\">\r\n        <List.Accordion\r\n          title=\"Expandable list item\"\r\n          description=\"Describes the expandable list item\"\r\n        >\r\n          <List.Item title=\"List item 1\" />\r\n          <List.Item title=\"List item 2\" />\r\n        </List.Accordion>\r\n      </List.Section>\r\n      <Divider />\r\n      <List.Section title=\"Expandable list with icons\">\r\n        <List.Accordion\r\n          left={(props) => <List.Icon {...props} icon=\"star\" />}\r\n          title=\"Accordion item 1\"\r\n        >\r\n          <List.Item\r\n            left={(props) => <List.Icon {...props} icon=\"thumb-up\" />}\r\n            title=\"List item 1\"\r\n          />\r\n          <List.Item\r\n            left={(props) => <List.Icon {...props} icon=\"thumb-down\" />}\r\n            title=\"List item 2\"\r\n          />\r\n        </List.Accordion>\r\n      </List.Section>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nListAccordionExample.title = 'List.Accordion';\r\n\r\nexport default ListAccordionExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}