{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { MD2Colors, MD3Colors, Paragraph, RadioButton, Text, TouchableRipple } from 'react-native-paper';\nimport { useExampleTheme } from \"../index\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RadioButtonExample = function RadioButtonExample() {\n  var _React$useState = React.useState('normal'),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checked = _React$useState2[0],\n    setChecked = _React$useState2[1];\n  var _useExampleTheme = useExampleTheme(),\n    isV3 = _useExampleTheme.isV3;\n  var TextComponent = isV3 ? Text : Paragraph;\n  return _jsxs(ScreenWrapper, {\n    style: styles.container,\n    children: [_jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return setChecked('normal');\n      },\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(TextComponent, {\n          children: \"Normal - Material Design\"\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(RadioButton.Android, {\n            value: \"normal\",\n            status: checked === 'normal' ? 'checked' : 'unchecked'\n          })\n        })]\n      })\n    }), _jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return setChecked('normal-ios');\n      },\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(TextComponent, {\n          children: \"Normal 2 - IOS\"\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(RadioButton.IOS, {\n            value: \"normal-ios\",\n            status: checked === 'normal-ios' ? 'checked' : 'unchecked'\n          })\n        })]\n      })\n    }), _jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return setChecked('custom');\n      },\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(TextComponent, {\n          children: \"Custom\"\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(RadioButton, {\n            value: \"custom\",\n            color: isV3 ? MD3Colors.error70 : MD2Colors.blue500,\n            status: checked === 'custom' ? 'checked' : 'unchecked'\n          })\n        })]\n      })\n    }), _jsx(RadioButton.Item, {\n      label: \"Normal 3 - Item\",\n      value: \"normal-item\",\n      status: checked === 'normal-item' ? 'checked' : 'unchecked',\n      onPress: function onPress() {\n        return setChecked('normal-item');\n      }\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TextComponent, {\n        children: \"Checked (Disabled)\"\n      }), _jsx(RadioButton, {\n        value: \"first\",\n        status: \"checked\",\n        disabled: true\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TextComponent, {\n        children: \"Unchecked (Disabled)\"\n      }), _jsx(RadioButton, {\n        value: \"second\",\n        status: \"unchecked\",\n        disabled: true\n      })]\n    }), _jsx(RadioButton.Item, {\n      label: \"Checked - Item (Disabled)\",\n      value: \"third\",\n      status: \"checked\",\n      disabled: true\n    }), _jsx(RadioButton.Item, {\n      label: \"Unchecked - Item (Disabled)\",\n      value: \"fourth\",\n      status: \"unchecked\",\n      disabled: true\n    })]\n  });\n};\nRadioButtonExample.title = 'Radio Button';\nvar styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  }\n});\nexport default RadioButtonExample;","map":{"version":3,"names":["React","StyleSheet","View","MD2Colors","MD3Colors","Paragraph","RadioButton","Text","TouchableRipple","useExampleTheme","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","RadioButtonExample","_React$useState","useState","_React$useState2","_slicedToArray","checked","setChecked","_useExampleTheme","isV3","TextComponent","style","styles","container","children","onPress","row","pointerEvents","Android","value","status","IOS","color","error70","blue500","Item","label","disabled","title","create","paddingVertical","flexDirection","alignItems","justifyContent","paddingHorizontal"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/RadioButtonExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nimport {\r\n  MD2Colors,\r\n  MD3Colors,\r\n  Paragraph,\r\n  RadioButton,\r\n  Text,\r\n  TouchableRipple,\r\n} from 'react-native-paper';\r\n\r\nimport { useExampleTheme } from '../index';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\ntype State = 'normal' | 'normal-ios' | 'normal-item' | 'custom';\r\n\r\nconst RadioButtonExample = () => {\r\n  const [checked, setChecked] = React.useState<State>('normal');\r\n  const { isV3 } = useExampleTheme();\r\n  const TextComponent = isV3 ? Text : Paragraph;\r\n\r\n  return (\r\n    <ScreenWrapper style={styles.container}>\r\n      <TouchableRipple onPress={() => setChecked('normal')}>\r\n        <View style={styles.row}>\r\n          <TextComponent>Normal - Material Design</TextComponent>\r\n          <View pointerEvents=\"none\">\r\n            <RadioButton.Android\r\n              value=\"normal\"\r\n              status={checked === 'normal' ? 'checked' : 'unchecked'}\r\n            />\r\n          </View>\r\n        </View>\r\n      </TouchableRipple>\r\n      <TouchableRipple onPress={() => setChecked('normal-ios')}>\r\n        <View style={styles.row}>\r\n          <TextComponent>Normal 2 - IOS</TextComponent>\r\n          <View pointerEvents=\"none\">\r\n            <RadioButton.IOS\r\n              value=\"normal-ios\"\r\n              status={checked === 'normal-ios' ? 'checked' : 'unchecked'}\r\n            />\r\n          </View>\r\n        </View>\r\n      </TouchableRipple>\r\n      <TouchableRipple onPress={() => setChecked('custom')}>\r\n        <View style={styles.row}>\r\n          <TextComponent>Custom</TextComponent>\r\n          <View pointerEvents=\"none\">\r\n            <RadioButton\r\n              value=\"custom\"\r\n              color={isV3 ? MD3Colors.error70 : MD2Colors.blue500}\r\n              status={checked === 'custom' ? 'checked' : 'unchecked'}\r\n            />\r\n          </View>\r\n        </View>\r\n      </TouchableRipple>\r\n      <RadioButton.Item\r\n        label=\"Normal 3 - Item\"\r\n        value=\"normal-item\"\r\n        status={checked === 'normal-item' ? 'checked' : 'unchecked'}\r\n        onPress={() => setChecked('normal-item')}\r\n      />\r\n      <View style={styles.row}>\r\n        <TextComponent>Checked (Disabled)</TextComponent>\r\n        <RadioButton value=\"first\" status=\"checked\" disabled />\r\n      </View>\r\n      <View style={styles.row}>\r\n        <TextComponent>Unchecked (Disabled)</TextComponent>\r\n        <RadioButton value=\"second\" status=\"unchecked\" disabled />\r\n      </View>\r\n      <RadioButton.Item\r\n        label=\"Checked - Item (Disabled)\"\r\n        value=\"third\"\r\n        status=\"checked\"\r\n        disabled\r\n      />\r\n      <RadioButton.Item\r\n        label=\"Unchecked - Item (Disabled)\"\r\n        value=\"fourth\"\r\n        status=\"unchecked\"\r\n        disabled\r\n      />\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nRadioButtonExample.title = 'Radio Button';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingVertical: 8,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n});\r\n\r\nexport default RadioButtonExample;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}