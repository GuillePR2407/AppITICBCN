{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar API_URL = 'http://localhost:8082/api';\nexport var loginUser = function () {\n  var _ref = _asyncToGenerator(function* (email, password) {\n    try {\n      var response = yield axios.post(`${API_URL}/auth/signin`, {\n        email: email,\n        password: password\n      });\n      var _response$data = response.data,\n        accessToken = _response$data.accessToken,\n        userId = _response$data.userId;\n      console.log('Success:', response.data);\n      yield AsyncStorage.setItem('accessToken', accessToken);\n      yield AsyncStorage.setItem('userId', userId);\n      try {\n        var roleResponse = yield axios.get(`${API_URL}/general/role/${email}`, {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        var roleId = roleResponse.data;\n        console.log('Role ID:', roleId);\n      } catch (error) {\n        console.error('Error fetching role:', error);\n      }\n    } catch (error) {\n      console.error('Login Error:', error);\n    }\n  });\n  return function loginUser(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","AsyncStorage","API_URL","loginUser","_ref","_asyncToGenerator","email","password","response","post","_response$data","data","accessToken","userId","console","log","setItem","roleResponse","get","headers","Authorization","roleId","error","_x","_x2","apply","arguments"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/services/authService.tsx"],"sourcesContent":["// AuthService.ts\r\nimport axios from 'axios';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst API_URL = 'http://localhost:8082/api';\r\n\r\nexport interface LoginResponse {\r\n    accessToken: string;\r\n    userId: string; // Asumimos que el servidor devuelve tambi√©n el userId\r\n}\r\n\r\nexport const loginUser = async (email: string, password: string): Promise<void> => {\r\n    try {\r\n        // Realizamos el POST para autenticar al usuario\r\n        const response = await axios.post<LoginResponse>(`${API_URL}/auth/signin`, {\r\n        email,\r\n        password,\r\n        });\r\n\r\n        const { accessToken, userId } = response.data;\r\n        console.log('Success:', response.data);\r\n\r\n        // Almacenamos el token y el userId en el AsyncStorage\r\n        await AsyncStorage.setItem('accessToken', accessToken);\r\n        await AsyncStorage.setItem('userId', userId);\r\n\r\n        // Optional: Fetch additional data like role after login\r\n        try {\r\n        const roleResponse = await axios.get(`${API_URL}/general/role/${email}`, {\r\n            headers: {\r\n            Authorization: `Bearer ${accessToken}` // Usamos el token en la cabecera Authorization\r\n            }\r\n        });\r\n\r\n        const roleId = roleResponse.data;\r\n        console.log('Role ID:', roleId);\r\n        } catch (error) {\r\n        console.error('Error fetching role:', error);\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('Login Error:', error);\r\n    }\r\n}\r\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,OAAO,GAAG,2BAA2B;AAO3C,OAAO,IAAMC,SAAS;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,WAAOC,KAAa,EAAEC,QAAgB,EAAoB;IAC/E,IAAI;MAEA,IAAMC,QAAQ,SAASR,KAAK,CAACS,IAAI,CAAiB,GAAEP,OAAQ,cAAa,EAAE;QAC3EI,KAAK,EAALA,KAAK;QACLC,QAAQ,EAARA;MACA,CAAC,CAAC;MAEF,IAAAG,cAAA,GAAgCF,QAAQ,CAACG,IAAI;QAArCC,WAAW,GAAAF,cAAA,CAAXE,WAAW;QAAEC,MAAM,GAAAH,cAAA,CAANG,MAAM;MAC3BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEP,QAAQ,CAACG,IAAI,CAAC;MAGtC,MAAMV,YAAY,CAACe,OAAO,CAAC,aAAa,EAAEJ,WAAW,CAAC;MACtD,MAAMX,YAAY,CAACe,OAAO,CAAC,QAAQ,EAAEH,MAAM,CAAC;MAG5C,IAAI;QACJ,IAAMI,YAAY,SAASjB,KAAK,CAACkB,GAAG,CAAE,GAAEhB,OAAQ,iBAAgBI,KAAM,EAAC,EAAE;UACrEa,OAAO,EAAE;YACTC,aAAa,EAAG,UAASR,WAAY;UACrC;QACJ,CAAC,CAAC;QAEF,IAAMS,MAAM,GAAGJ,YAAY,CAACN,IAAI;QAChCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEM,MAAM,CAAC;MAC/B,CAAC,CAAC,OAAOC,KAAK,EAAE;QAChBR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C;IAEJ,CAAC,CAAC,OAAOA,KAAK,EAAE;MACZR,OAAO,CAACQ,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACxC;EACJ,CAAC;EAAA,gBAhCYnB,SAASA,CAAAoB,EAAA,EAAAC,GAAA;IAAA,OAAApB,IAAA,CAAAqB,KAAA,OAAAC,SAAA;EAAA;AAAA,GAgCrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}