{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Appbar, Avatar, Banner, Chip, FAB, IconButton, List, ToggleButton, Tooltip, Card } from 'react-native-paper';\nimport { isWeb } from \"../../utils\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\nvar DURATION_MEDIUM = 1500;\nvar DURATION_LONG = 3000;\nvar formOfTransport = [{\n  title: 'Car - default delays'\n}, {\n  title: 'Airplane - default delays'\n}, {\n  title: 'Taxi - long enter delay',\n  enterTouchDelay: DURATION_MEDIUM\n}, {\n  title: 'Train - long enter delay',\n  enterTouchDelay: DURATION_MEDIUM\n}, {\n  title: 'Ferry - long leave delay',\n  leaveTouchDelay: DURATION_MEDIUM\n}, {\n  title: 'Bus - long leave delay',\n  leaveTouchDelay: DURATION_MEDIUM\n}, {\n  title: 'Walk - long both delays',\n  enterTouchDelay: DURATION_MEDIUM,\n  leaveTouchDelay: DURATION_LONG\n}];\nvar TooltipExample = function TooltipExample(_ref) {\n  var navigation = _ref.navigation;\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      header: function header() {\n        return _jsxs(Appbar.Header, {\n          elevated: true,\n          children: [_jsx(Tooltip, {\n            title: \"Go back\",\n            children: _jsx(Appbar.BackAction, {\n              onPress: function onPress() {\n                return navigation.goBack();\n              }\n            })\n          }), _jsx(Appbar.Content, {\n            title: \"Tooltips\"\n          }), _jsx(Tooltip, {\n            title: \"Print \\u2318 + P\",\n            children: _jsx(Appbar.Action, {\n              icon: \"printer\",\n              onPress: function onPress() {}\n            })\n          }), _jsx(Tooltip, {\n            title: \"Search\",\n            children: _jsx(Appbar.Action, {\n              icon: \"magnify\",\n              onPress: function onPress() {}\n            })\n          }), _jsx(Tooltip, {\n            title: \"More options\",\n            children: _jsx(Appbar.Action, {\n              icon: MORE_ICON,\n              onPress: function onPress() {}\n            })\n          })]\n        });\n      }\n    });\n  });\n  return _jsxs(_Fragment, {\n    children: [_jsxs(ScreenWrapper, {\n      children: [_jsxs(Banner, {\n        visible: true,\n        children: [\"A tooltip is displayed upon\", !isWeb ? ' tapping and holding a screen element or component' : ' hovering over a screen element or component', \". Continuously display the tooltip as long as the user long-presses or hovers over the element.\"]\n      }), _jsx(List.Section, {\n        title: \"Icon Buttons\",\n        children: _jsx(View, {\n          style: styles.iconButtonContainer,\n          children: formOfTransport.map(function (transport, index) {\n            return _jsx(Tooltip, {\n              title: transport.title,\n              enterTouchDelay: transport.enterTouchDelay,\n              leaveTouchDelay: transport.leaveTouchDelay,\n              children: _jsx(IconButton, {\n                icon: transport.title.split(' ')[0].toLowerCase(),\n                size: 24,\n                onPress: function onPress() {}\n              })\n            }, index);\n          })\n        })\n      }), _jsx(List.Section, {\n        title: \"Toggle Buttons\",\n        children: _jsxs(ToggleButton.Row, {\n          value: \"bold\",\n          style: styles.toggleButtonRow,\n          onValueChange: function onValueChange() {},\n          children: [_jsx(Tooltip, {\n            title: \"Bold\",\n            children: _jsx(ToggleButton, {\n              icon: \"format-bold\",\n              value: \"bold\"\n            })\n          }), _jsx(Tooltip, {\n            title: \"Align center\",\n            children: _jsx(ToggleButton, {\n              icon: \"format-align-center\",\n              value: \"align-center\"\n            })\n          })]\n        })\n      }), _jsx(List.Section, {\n        title: \"Avatar\",\n        children: _jsx(View, {\n          style: styles.avatarContainer,\n          children: _jsx(Tooltip, {\n            title: \"Username\",\n            children: _jsx(Avatar.Text, {\n              label: \"U\"\n            })\n          })\n        })\n      }), _jsx(List.Section, {\n        title: \"Chip\",\n        children: _jsx(View, {\n          style: styles.chipContainer,\n          children: _jsx(Tooltip, {\n            title: \"Copied\",\n            children: _jsx(Chip, {\n              mode: \"outlined\",\n              avatar: _jsx(Image, {\n                source: require(\"../../assets/images/avatar.png\"),\n                accessibilityIgnoresInvertColors: true\n              }),\n              children: \"John Doe\"\n            })\n          })\n        })\n      }), _jsx(List.Section, {\n        title: \"Card\",\n        children: _jsx(Tooltip, {\n          title: \"Cafeteria, 1st floor\",\n          children: _jsx(Card, {\n            style: styles.cardContainer,\n            children: _jsx(Card.Title, {\n              title: \"Lunch break\",\n              subtitle: \"1:00-2:00 PM\",\n              left: function left(props) {\n                return _jsx(Avatar.Icon, _objectSpread(_objectSpread({}, props), {}, {\n                  icon: \"food-fork-drink\"\n                }));\n              }\n            })\n          })\n        })\n      })]\n    }), _jsx(View, {\n      style: styles.fabContainer,\n      children: _jsx(Tooltip, {\n        title: \"Press Me\",\n        children: _jsx(FAB, {\n          size: \"medium\",\n          icon: \"plus\",\n          onPress: function onPress() {}\n        })\n      })\n    })]\n  });\n};\nTooltipExample.title = 'Tooltip';\nexport default TooltipExample;\nvar styles = StyleSheet.create({\n  avatarContainer: {\n    marginHorizontal: 16,\n    width: 64\n  },\n  chipContainer: {\n    marginHorizontal: 16,\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  fabContainer: {\n    margin: 16,\n    right: 0,\n    position: 'absolute',\n    bottom: 0\n  },\n  cardContainer: {\n    margin: 16\n  },\n  toggleButtonRow: {\n    paddingHorizontal: 16\n  },\n  iconButtonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  }\n});","map":{"version":3,"names":["React","Platform","StyleSheet","View","Image","Appbar","Avatar","Banner","Chip","FAB","IconButton","List","ToggleButton","Tooltip","Card","isWeb","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MORE_ICON","OS","DURATION_MEDIUM","DURATION_LONG","formOfTransport","title","enterTouchDelay","leaveTouchDelay","TooltipExample","_ref","navigation","useLayoutEffect","setOptions","header","Header","elevated","children","BackAction","onPress","goBack","Content","Action","icon","visible","Section","style","styles","iconButtonContainer","map","transport","index","split","toLowerCase","size","Row","value","toggleButtonRow","onValueChange","avatarContainer","Text","label","chipContainer","mode","avatar","source","require","accessibilityIgnoresInvertColors","cardContainer","Title","subtitle","left","props","Icon","_objectSpread","fabContainer","create","marginHorizontal","width","alignItems","flexDirection","margin","right","position","bottom","paddingHorizontal","flexWrap"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/TooltipExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Platform, StyleSheet, View, Image } from 'react-native';\r\n\r\nimport type { StackNavigationProp } from '@react-navigation/stack';\r\nimport {\r\n  Appbar,\r\n  Avatar,\r\n  Banner,\r\n  Chip,\r\n  FAB,\r\n  IconButton,\r\n  List,\r\n  ToggleButton,\r\n  Tooltip,\r\n  Card,\r\n} from 'react-native-paper';\r\n\r\nimport { isWeb } from '../../utils';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\ntype Props = {\r\n  navigation: StackNavigationProp<{}>;\r\n};\r\n\r\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\r\n\r\nconst DURATION_MEDIUM = 1500;\r\nconst DURATION_LONG = 3000;\r\n\r\nconst formOfTransport = [\r\n  { title: 'Car - default delays' },\r\n  { title: 'Airplane - default delays' },\r\n  { title: 'Taxi - long enter delay', enterTouchDelay: DURATION_MEDIUM },\r\n  { title: 'Train - long enter delay', enterTouchDelay: DURATION_MEDIUM },\r\n  { title: 'Ferry - long leave delay', leaveTouchDelay: DURATION_MEDIUM },\r\n  { title: 'Bus - long leave delay', leaveTouchDelay: DURATION_MEDIUM },\r\n  {\r\n    title: 'Walk - long both delays',\r\n    enterTouchDelay: DURATION_MEDIUM,\r\n    leaveTouchDelay: DURATION_LONG,\r\n  },\r\n];\r\n\r\nconst TooltipExample = ({ navigation }: Props) => {\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      header: () => (\r\n        <Appbar.Header elevated>\r\n          <Tooltip title=\"Go back\">\r\n            <Appbar.BackAction onPress={() => navigation.goBack()} />\r\n          </Tooltip>\r\n          <Appbar.Content title=\"Tooltips\" />\r\n          <Tooltip title=\"Print ⌘ + P\">\r\n            <Appbar.Action icon=\"printer\" onPress={() => {}} />\r\n          </Tooltip>\r\n          <Tooltip title=\"Search\">\r\n            <Appbar.Action icon=\"magnify\" onPress={() => {}} />\r\n          </Tooltip>\r\n          <Tooltip title=\"More options\">\r\n            <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\r\n          </Tooltip>\r\n        </Appbar.Header>\r\n      ),\r\n    });\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ScreenWrapper>\r\n        <Banner visible>\r\n          A tooltip is displayed upon\r\n          {!isWeb\r\n            ? ' tapping and holding a screen element or component'\r\n            : ' hovering over a screen element or component'}\r\n          . Continuously display the tooltip as long as the user long-presses or\r\n          hovers over the element.\r\n        </Banner>\r\n        <List.Section title=\"Icon Buttons\">\r\n          <View style={styles.iconButtonContainer}>\r\n            {formOfTransport.map((transport, index) => (\r\n              <Tooltip\r\n                key={index}\r\n                title={transport.title}\r\n                enterTouchDelay={transport.enterTouchDelay}\r\n                leaveTouchDelay={transport.leaveTouchDelay}\r\n              >\r\n                <IconButton\r\n                  icon={transport.title.split(' ')[0].toLowerCase()}\r\n                  size={24}\r\n                  onPress={() => {}}\r\n                />\r\n              </Tooltip>\r\n            ))}\r\n          </View>\r\n        </List.Section>\r\n        <List.Section title=\"Toggle Buttons\">\r\n          <ToggleButton.Row\r\n            value=\"bold\"\r\n            style={styles.toggleButtonRow}\r\n            onValueChange={() => {}}\r\n          >\r\n            <Tooltip title=\"Bold\">\r\n              <ToggleButton icon=\"format-bold\" value=\"bold\" />\r\n            </Tooltip>\r\n            <Tooltip title=\"Align center\">\r\n              <ToggleButton icon=\"format-align-center\" value=\"align-center\" />\r\n            </Tooltip>\r\n          </ToggleButton.Row>\r\n        </List.Section>\r\n        <List.Section title=\"Avatar\">\r\n          <View style={styles.avatarContainer}>\r\n            <Tooltip title=\"Username\">\r\n              <Avatar.Text label=\"U\" />\r\n            </Tooltip>\r\n          </View>\r\n        </List.Section>\r\n        <List.Section title=\"Chip\">\r\n          <View style={styles.chipContainer}>\r\n            <Tooltip title=\"Copied\">\r\n              <Chip\r\n                mode=\"outlined\"\r\n                avatar={\r\n                  <Image\r\n                    source={require('../../assets/images/avatar.png')}\r\n                    accessibilityIgnoresInvertColors\r\n                  />\r\n                }\r\n              >\r\n                John Doe\r\n              </Chip>\r\n            </Tooltip>\r\n          </View>\r\n        </List.Section>\r\n        <List.Section title=\"Card\">\r\n          <Tooltip title=\"Cafeteria, 1st floor\">\r\n            <Card style={styles.cardContainer}>\r\n              <Card.Title\r\n                title=\"Lunch break\"\r\n                subtitle=\"1:00-2:00 PM\"\r\n                left={(props) => (\r\n                  <Avatar.Icon {...props} icon=\"food-fork-drink\" />\r\n                )}\r\n              />\r\n            </Card>\r\n          </Tooltip>\r\n        </List.Section>\r\n      </ScreenWrapper>\r\n      <View style={styles.fabContainer}>\r\n        <Tooltip title=\"Press Me\">\r\n          <FAB size=\"medium\" icon=\"plus\" onPress={() => {}} />\r\n        </Tooltip>\r\n      </View>\r\n    </>\r\n  );\r\n};\r\n\r\nTooltipExample.title = 'Tooltip';\r\n\r\nexport default TooltipExample;\r\n\r\nconst styles = StyleSheet.create({\r\n  avatarContainer: {\r\n    marginHorizontal: 16,\r\n    width: 64,\r\n  },\r\n  chipContainer: {\r\n    marginHorizontal: 16,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  fabContainer: {\r\n    margin: 16,\r\n    right: 0,\r\n    position: 'absolute',\r\n    bottom: 0,\r\n  },\r\n  cardContainer: {\r\n    margin: 16,\r\n  },\r\n  toggleButtonRow: {\r\n    paddingHorizontal: 16,\r\n  },\r\n  iconButtonContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}