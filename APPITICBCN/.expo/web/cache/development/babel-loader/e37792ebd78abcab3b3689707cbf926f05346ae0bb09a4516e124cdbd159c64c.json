{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useContext } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput, Button, Checkbox } from 'react-native-paper';\nimport Logo from \"./components/Logo\";\nimport { useNavigation } from '@react-navigation/native';\nimport { loginUser } from \"./auth/authService\";\nimport { PreferencesContext } from \"./index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var navigation = useNavigation();\n  var _useContext = useContext(PreferencesContext),\n    theme = _useContext.theme;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    checked = _useState2[0],\n    setChecked = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var handleLogin = function handleLogin() {\n    loginUser(email, password);\n  };\n  var navigateToRegister = function navigateToRegister() {\n    navigation.navigate('Register');\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(View, {\n      style: {\n        width: '80%',\n        alignSelf: 'center'\n      },\n      children: [_jsx(Logo, {}), _jsx(TextInput, {\n        theme: {\n          colors: {\n            primary: theme.colors.primary\n          }\n        },\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        label: \"Email\",\n        value: email,\n        onChangeText: setEmail,\n        mode: \"outlined\"\n      }), _jsx(TextInput, {\n        theme: {\n          colors: {\n            primary: theme.colors.primary\n          }\n        },\n        style: {\n          marginTop: 20\n        },\n        label: \"Password\",\n        value: password,\n        secureTextEntry: true,\n        onChangeText: setPassword,\n        mode: \"outlined\"\n      }), _jsxs(View, {\n        style: {\n          flexDirection: 'row',\n          alignItems: 'center',\n          marginTop: 10\n        },\n        children: [_jsx(Checkbox, {\n          theme: {\n            colors: {\n              primary: theme.colors.primary\n            }\n          },\n          status: checked ? 'checked' : 'unchecked',\n          onPress: function onPress() {\n            return setChecked(!checked);\n          }\n        }), _jsx(Text, {\n          onPress: function onPress() {\n            return setChecked(!checked);\n          },\n          style: {\n            marginLeft: 8\n          },\n          children: \"Remember me\"\n        })]\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: handleLogin,\n        labelStyle: {\n          color: theme.colors.onDoneButton,\n          fontSize: 20\n        },\n        style: {\n          marginTop: 20,\n          marginBottom: 20,\n          borderRadius: 30,\n          height: '10%',\n          justifyContent: 'center',\n          width: '60%',\n          alignSelf: 'center',\n          backgroundColor: theme.colors.doneButton\n        },\n        children: \"Login\"\n      }), _jsx(Text, {\n        style: {\n          alignSelf: 'center',\n          fontSize: 18\n        },\n        onPress: navigateToRegister,\n        children: \"\\xA1Reg\\xEDstrate!\"\n      })]\n    })\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","useContext","View","Text","TextInput","Button","Checkbox","Logo","useNavigation","loginUser","PreferencesContext","jsx","_jsx","jsxs","_jsxs","Login","navigation","_useContext","theme","_useState","_useState2","_slicedToArray","checked","setChecked","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","handleLogin","navigateToRegister","navigate","style","flex","justifyContent","children","width","alignSelf","colors","primary","marginTop","marginBottom","label","value","onChangeText","mode","secureTextEntry","flexDirection","alignItems","status","onPress","marginLeft","labelStyle","color","onDoneButton","fontSize","borderRadius","height","backgroundColor","doneButton"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Login.tsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { TextInput, Button, Checkbox } from 'react-native-paper';\r\nimport Logo from './components/Logo';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\nimport { RootStackParamList } from './RootStackParamList';\r\nimport { loginUser } from './auth/authService';\r\nimport { PreferencesContext } from './index';\r\n\r\nconst Login = () => {\r\n    type NewsNavigationProp = StackNavigationProp<RootStackParamList, 'Login'>;\r\n\r\n    const navigation = useNavigation<NewsNavigationProp>();\r\n    const { theme } = useContext(PreferencesContext);\r\n\r\n    const [checked, setChecked] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = () => {\r\n        loginUser(email, password); // Use the imported function\r\n    };\r\n\r\n    const navigateToRegister = () => {\r\n        navigation.navigate('Register');\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n            <View style={{ width: '80%', alignSelf: 'center' }}>\r\n                <Logo />\r\n                <TextInput\r\n                    theme={{ colors: { primary: theme.colors.primary }}}  \r\n                    style={{ marginTop: 20, marginBottom: 20 }}\r\n                    label=\"Email\"\r\n                    value={email}\r\n                    onChangeText={setEmail}\r\n                    mode=\"outlined\"\r\n                />\r\n                <TextInput  \r\n                    theme={{ colors: { primary: theme.colors.primary }}} \r\n                    style={{ marginTop: 20 }} \r\n                    label=\"Password\"\r\n                    value={password}\r\n                    secureTextEntry\r\n                    onChangeText={setPassword}\r\n                    mode=\"outlined\"\r\n                />\r\n                <View style={{ flexDirection: 'row', alignItems: 'center', marginTop: 10 }}>\r\n                    <Checkbox\r\n                        theme={{ colors: { primary: theme.colors.primary }}}  \r\n                        status={checked ? 'checked' : 'unchecked'}\r\n                        onPress={() => setChecked(!checked)}\r\n                    />\r\n                    <Text onPress={() => setChecked(!checked)} style={{ marginLeft: 8 }}>\r\n                        Remember me\r\n                    </Text>\r\n                </View>\r\n                <Button \r\n                    mode=\"contained\" \r\n                    onPress={handleLogin}\r\n                    labelStyle={{ color: theme.colors.onDoneButton, fontSize: 20 }}\r\n                    style={{\r\n                        marginTop: 20,\r\n                        marginBottom: 20,\r\n                        borderRadius: 30,\r\n                        height: '10%',\r\n                        justifyContent: 'center',\r\n                        width: '60%',\r\n                        alignSelf: 'center',\r\n                        backgroundColor: theme.colors.doneButton,\r\n                    }}\r\n                >\r\n                    Login\r\n                </Button>\r\n                <Text style={{ alignSelf: 'center', fontSize: 18 }} onPress={navigateToRegister}>\r\n                    ¡Regístrate!\r\n                </Text>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}