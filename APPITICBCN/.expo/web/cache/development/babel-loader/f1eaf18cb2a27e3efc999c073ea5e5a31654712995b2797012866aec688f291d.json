{"ast":null,"code":"import * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { createStackNavigator, CardStyleInterpolators } from '@react-navigation/stack';\nimport { Appbar } from 'react-native-paper';\nimport { useUser } from \"./context/UserContext\";\nimport LogoPetit from \"./components/LogoPetit\";\nimport NewsSection from \"./Sections/NewsSection\";\nimport Login from \"./Login\";\nimport NoticiaItem from \"./items/NoticiaItem\";\nimport TramitsSection from \"./Sections/TramitsSection\";\nimport InfoSection from \"./Sections/InfoSection\";\nimport InfoItem from \"./items/InfoItem\";\nimport TramitsItem from \"./items/TramitsItem\";\nimport Register from \"./Register\";\nimport QualificacionsSection from \"./Sections/QualificacionsSection\";\nimport AddUsersSection from \"./Sections/AddUsersSection\";\nimport UsersSection from \"./Sections/UsersSection\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function Root() {\n  var _useUser = useUser(),\n    userRole = _useUser.userRole;\n  var initialRouteName = userRole === 4 ? 'AddUsersSection' : 'NewsSection';\n  return _jsxs(Stack.Navigator, {\n    initialRouteName: initialRouteName,\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation,\n        route = _ref.route;\n      return {\n        detachPreviousScreen: !navigation.isFocused(),\n        cardStyleInterpolator: Platform.OS === 'android' ? CardStyleInterpolators.forFadeFromBottomAndroid : CardStyleInterpolators.forHorizontalIOS,\n        header: function header(_ref2) {\n          var navigation = _ref2.navigation,\n            route = _ref2.route,\n            options = _ref2.options,\n            back = _ref2.back;\n          var title = route.name;\n          var excludedScreens = ['Login', 'NoticiaItem', 'InfoItem', 'TramitsItem', 'Register'];\n          var isExcludedScreen = excludedScreens.includes(route.name);\n          return _jsxs(Appbar.Header, {\n            style: {\n              justifyContent: 'space-between'\n            },\n            elevated: true,\n            children: [!isExcludedScreen && navigation.openDrawer ? _jsx(Appbar.Action, {\n              icon: \"menu\",\n              isLeading: true,\n              onPress: function onPress() {\n                return navigation.openDrawer();\n              }\n            }) : back ? _jsx(Appbar.BackAction, {\n              onPress: function onPress() {\n                return navigation.goBack();\n              }\n            }) : null, _jsx(Appbar.Content, {\n              title: title,\n              style: {\n                position: 'absolute',\n                left: 0,\n                right: 0,\n                justifyContent: 'center',\n                alignItems: 'center'\n              }\n            }), _jsx(Appbar.Content, {\n              title: _jsx(LogoPetit, {}),\n              style: {\n                position: 'absolute',\n                right: 30\n              }\n            })]\n          });\n        }\n      };\n    },\n    children: [userRole >= 1 && _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"NewsSection\",\n        component: NewsSection,\n        options: {\n          title: 'Noticies'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"TramitsSection\",\n        component: TramitsSection,\n        options: {\n          title: 'Tràmits'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"InfoSection\",\n        component: InfoSection,\n        options: {\n          title: 'Informació'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"QualificacionsSection\",\n        component: QualificacionsSection,\n        options: {\n          title: 'Qualificacions'\n        }\n      })]\n    }), userRole === 4 && _jsxs(_Fragment, {\n      children: [_jsx(Stack.Screen, {\n        name: \"AddUsersSection\",\n        component: AddUsersSection,\n        options: {\n          title: 'Afegir Usuaris'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"UsersSection\",\n        component: UsersSection,\n        options: {\n          title: 'Usuaris'\n        }\n      })]\n    }), _jsx(Stack.Screen, {\n      name: \"Login\",\n      component: Login,\n      options: {\n        title: 'Login'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"Register\",\n      component: Register,\n      options: {\n        title: 'Registre'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"NoticiaItem\",\n      component: NoticiaItem,\n      options: {\n        title: 'Noticia'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"InfoItem\",\n      component: InfoItem,\n      options: {\n        title: 'Informació'\n      }\n    }), _jsx(Stack.Screen, {\n      name: \"TramitsItem\",\n      component: TramitsItem,\n      options: {\n        title: 'Tràmit'\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","Platform","createStackNavigator","CardStyleInterpolators","Appbar","useUser","LogoPetit","NewsSection","Login","NoticiaItem","TramitsSection","InfoSection","InfoItem","TramitsItem","Register","QualificacionsSection","AddUsersSection","UsersSection","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","Root","_useUser","userRole","initialRouteName","Navigator","screenOptions","_ref","navigation","route","detachPreviousScreen","isFocused","cardStyleInterpolator","OS","forFadeFromBottomAndroid","forHorizontalIOS","header","_ref2","options","back","title","name","excludedScreens","isExcludedScreen","includes","Header","style","justifyContent","elevated","children","openDrawer","Action","icon","isLeading","onPress","BackAction","goBack","Content","position","left","right","alignItems","Screen","component"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/RootNavigator.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Platform } from 'react-native';\r\n\r\nimport { createStackNavigator, CardStyleInterpolators } from '@react-navigation/stack';\r\nimport { Appbar } from 'react-native-paper';\r\n\r\nimport { useUser } from './context/UserContext';\r\nimport LogoPetit from './components/LogoPetit';\r\nimport NewsSection from './Sections/NewsSection';\r\nimport Login from './Login';\r\nimport NoticiaItem from './items/NoticiaItem';\r\nimport TramitsSection from './Sections/TramitsSection';\r\nimport InfoSection from './Sections/InfoSection';\r\nimport InfoItem from './items/InfoItem';\r\nimport TramitsItem from './items/TramitsItem';\r\nimport Register from './Register';\r\nimport QualificacionsSection from './Sections/QualificacionsSection';\r\nimport AddUsersSection from './Sections/AddUsersSection';\r\nimport UsersSection from './Sections/UsersSection';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Root() {\r\n  const { userRole } = useUser();\r\n  const initialRouteName = userRole === 4 ? 'AddUsersSection' : 'NewsSection';\r\n\r\n  return (\r\n    <Stack.Navigator initialRouteName={initialRouteName}\r\n      screenOptions={({ navigation, route }) => ({\r\n        detachPreviousScreen: !navigation.isFocused(),\r\n        cardStyleInterpolator: Platform.OS === 'android'\r\n          ? CardStyleInterpolators.forFadeFromBottomAndroid\r\n          : CardStyleInterpolators.forHorizontalIOS,\r\n        header: ({ navigation, route, options, back }) => {\r\n          const title = route.name;\r\n          const excludedScreens = ['Login', 'NoticiaItem', 'InfoItem', 'TramitsItem', 'Register'];\r\n          const isExcludedScreen = excludedScreens.includes(route.name);\r\n\r\n          return (\r\n            <Appbar.Header style={{ justifyContent: 'space-between' }} elevated>\r\n              {!isExcludedScreen && (navigation as any).openDrawer ? (\r\n                <Appbar.Action\r\n                  icon=\"menu\"\r\n                  isLeading\r\n                  onPress={() => (navigation as any).openDrawer()}\r\n                />\r\n              ) : back ? (\r\n                <Appbar.BackAction onPress={() => navigation.goBack()} />\r\n              ) : null}\r\n              <Appbar.Content title={title} style={{ position: 'absolute', left: 0, right: 0, justifyContent: 'center', alignItems: 'center' }} />\r\n              <Appbar.Content title={<LogoPetit />} style={{ position: 'absolute', right: 30 }} />\r\n            </Appbar.Header>\r\n          );\r\n        },\r\n      })}\r\n    >\r\n      {userRole >= 1 && (\r\n        <>\r\n          <Stack.Screen name=\"NewsSection\" component={NewsSection} options={{ title: 'Noticies' }} />\r\n          <Stack.Screen name=\"TramitsSection\" component={TramitsSection} options={{ title: 'Tràmits' }} />\r\n          <Stack.Screen name=\"InfoSection\" component={InfoSection} options={{ title: 'Informació' }} />\r\n          <Stack.Screen name=\"QualificacionsSection\" component={QualificacionsSection} options={{ title: 'Qualificacions' }} />\r\n        </>\r\n      )}\r\n      {userRole === 4 && (\r\n        <>\r\n          <Stack.Screen name=\"AddUsersSection\" component={AddUsersSection} options={{ title: 'Afegir Usuaris' }} />\r\n          <Stack.Screen name=\"UsersSection\" component={UsersSection} options={{ title: 'Usuaris' }} />\r\n        </>\r\n      )}\r\n      <Stack.Screen name=\"Login\" component={Login} options={{ title: 'Login' }} />\r\n      <Stack.Screen name=\"Register\" component={Register} options={{ title: 'Registre' }} />\r\n      <Stack.Screen name=\"NoticiaItem\" component={NoticiaItem} options={{ title: 'Noticia' }} />\r\n      <Stack.Screen name=\"InfoItem\" component={InfoItem} options={{ title: 'Informació' }} />\r\n      <Stack.Screen name=\"TramitsItem\" component={TramitsItem} options={{ title: 'Tràmit' }} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}