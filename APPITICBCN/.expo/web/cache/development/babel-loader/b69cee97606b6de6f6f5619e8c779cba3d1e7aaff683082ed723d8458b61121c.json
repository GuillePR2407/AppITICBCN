{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { List, Text } from 'react-native-paper';\nimport { getAllUsers } from \"../services/adminService\";\nimport { PreferencesContext } from \"../index\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar AlumSection = function AlumSection() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var _useState3 = useState(new Set()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    expandedIds = _useState4[0],\n    setExpandedIds = _useState4[1];\n  var _React$useContext = React.useContext(PreferencesContext),\n    theme = _React$useContext.theme;\n  var navigation = useNavigation();\n  var handlePress = function handlePress(email) {\n    var newSet = new Set(expandedIds);\n    if (newSet.has(email)) {\n      newSet.delete(email);\n    } else {\n      newSet.add(email);\n    }\n    setExpandedIds(newSet);\n  };\n  useEffect(function () {\n    getAllUsers().then(function (allUsers) {\n      var alumnos = allUsers.filter(function (user) {\n        return user.role.name === 'ROLE_STUDENT';\n      });\n      setUsers(alumnos);\n    }).catch(console.error);\n  }, []);\n  return _jsx(ScrollView, {\n    style: {\n      padding: 20\n    },\n    children: users.map(function (user) {\n      return _jsx(View, {\n        style: {\n          backgroundColor: theme.colors.listItem,\n          margin: 15,\n          marginTop: 15,\n          marginBottom: 0,\n          borderRadius: 10,\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.23,\n          shadowRadius: 2.62,\n          elevation: 4\n        },\n        children: _jsxs(List.Accordion, {\n          title: user.username,\n          expanded: expandedIds.has(user.email),\n          onPress: function onPress() {\n            return handlePress(user.email);\n          },\n          style: {\n            backgroundColor: theme.colors.listItem,\n            borderRadius: 10,\n            borderBottomEndRadius: expandedIds.has(user.email) ? 0 : 10,\n            borderBottomStartRadius: expandedIds.has(user.email) ? 0 : 10\n          },\n          onLongPress: function onLongPress() {\n            return navigation.navigate('QualificacionsSection', {\n              userEmail: user.email\n            });\n          },\n          children: [_jsxs(Text, {\n            style: {\n              padding: 10,\n              color: theme.colors.primary,\n              fontSize: 18\n            },\n            children: [\"Email: \", user.email]\n          }), _jsxs(Text, {\n            style: {\n              padding: 10,\n              color: theme.colors.primary,\n              fontSize: 18\n            },\n            children: [\"Role: \", user.role.name]\n          })]\n        })\n      }, user.email);\n    })\n  });\n};\nexport default AlumSection;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","View","List","Text","getAllUsers","PreferencesContext","useNavigation","jsxs","_jsxs","jsx","_jsx","AlumSection","_useState","_useState2","_slicedToArray","users","setUsers","_useState3","Set","_useState4","expandedIds","setExpandedIds","_React$useContext","useContext","theme","navigation","handlePress","email","newSet","has","delete","add","then","allUsers","alumnos","filter","user","role","name","catch","console","error","style","padding","children","map","backgroundColor","colors","listItem","margin","marginTop","marginBottom","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","Accordion","title","username","expanded","onPress","borderBottomEndRadius","borderBottomStartRadius","onLongPress","navigate","userEmail","color","primary","fontSize"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Sections/AlumSection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List, Text, useTheme } from 'react-native-paper';\r\nimport { getAllUsers } from '../services/adminService';\r\nimport { PreferencesContext } from '../index';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { StackNavigationProp } from '@react-navigation/stack';\r\n\r\ninterface User {\r\n    email: string;\r\n    username: string;\r\n    role: {\r\n        name: string;\r\n    };\r\n}\r\n\r\ntype RootStackParamList = {\r\n    QualificacionsSection: { userEmail: string };\r\n};\r\n\r\nconst AlumSection: React.FC = () => {\r\n    const [users, setUsers] = useState<User[]>([]);\r\n    const [expandedIds, setExpandedIds] = useState<Set<string>>(new Set());\r\n    const { theme } = React.useContext(PreferencesContext);\r\n    const navigation = useNavigation<StackNavigationProp<RootStackParamList>>();\r\n\r\n    const handlePress = (email: string) => {\r\n        const newSet = new Set(expandedIds);\r\n        if (newSet.has(email)) {\r\n            newSet.delete(email);\r\n        } else {\r\n            newSet.add(email);\r\n        }\r\n        setExpandedIds(newSet);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllUsers()\r\n            .then((allUsers) => {\r\n                const alumnos = allUsers.filter((user: User) => user.role.name === 'ROLE_STUDENT');\r\n                setUsers(alumnos);\r\n            })\r\n            .catch(console.error);\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView style={{ padding: 20 }}>\r\n            {users.map((user) => (\r\n                <View\r\n                    key={user.email}\r\n                    style={{\r\n                        backgroundColor: theme.colors.listItem,\r\n                        margin: 15,\r\n                        marginTop: 15,\r\n                        marginBottom: 0,\r\n                        borderRadius: 10,\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.23,\r\n                        shadowRadius: 2.62,\r\n                        elevation: 4,\r\n                    }}\r\n                >\r\n                    <List.Accordion\r\n                        title={user.username}\r\n                        expanded={expandedIds.has(user.email)}\r\n                        onPress={() => handlePress(user.email)}\r\n                        style={{\r\n                            backgroundColor: theme.colors.listItem,\r\n                            borderRadius: 10,\r\n                            borderBottomEndRadius: expandedIds.has(user.email) ? 0 : 10,\r\n                            borderBottomStartRadius: expandedIds.has(user.email) ? 0 : 10,\r\n                        }}\r\n                        onLongPress={() => navigation.navigate('QualificacionsSection', { userEmail: user.email })}\r\n                    >\r\n                        <Text style={{ padding: 10, color: theme.colors.primary, fontSize: 18 }}>\r\n                            Email: {user.email}\r\n                        </Text>\r\n                        <Text style={{ padding: 10, color: theme.colors.primary, fontSize: 18 }}>\r\n                            Role: {user.role.name}\r\n                        </Text>\r\n                    </List.Accordion>\r\n                </View>\r\n            ))}\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nexport default AlumSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}