{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nimport * as React from 'react';\nimport { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport { TextInput, Button } from 'react-native-paper';\nimport { useExampleTheme } from \"../index\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar theme = useExampleTheme();\nexport var Login = function (_Component) {\n  _inherits(Login, _Component);\n  function Login(props) {\n    var _this;\n    _classCallCheck(this, Login);\n    _this = _callSuper(this, Login, [props]);\n    _this.handleUserNameChange = function (text) {\n      _this.setState({\n        userName: text\n      });\n    };\n    _this.handlePasswordChange = function (text) {\n      _this.setState({\n        password: text\n      });\n    };\n    _this.handleLogin = function () {\n      var _this$state = _this.state,\n        userName = _this$state.userName,\n        password = _this$state.password;\n      console.log('Username:', userName);\n      console.log('Password:', password);\n    };\n    _this.state = {\n      userName: '',\n      password: ''\n    };\n    return _this;\n  }\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n        userName = _this$state2.userName,\n        password = _this$state2.password;\n      return _jsx(ScreenWrapper, {\n        children: _jsx(View, {\n          style: {\n            flex: 1,\n            justifyContent: 'center'\n          },\n          children: _jsxs(View, {\n            style: {\n              width: '80%',\n              alignSelf: 'center'\n            },\n            children: [_jsx(TextInput, {\n              label: \"Email\",\n              value: userName,\n              onChangeText: this.handleUserNameChange\n            }), _jsx(TextInput, {\n              label: \"Password\",\n              value: password,\n              secureTextEntry: true,\n              onChangeText: this.handlePasswordChange\n            }), _jsx(Button, {\n              mode: \"contained\",\n              onPress: this.handleLogin,\n              style: {\n                marginTop: 20\n              },\n              children: \"Login\"\n            })]\n          })\n        })\n      });\n    }\n  }]);\n  return Login;\n}(Component);\nexport default Login;","map":{"version":3,"names":["React","Component","View","TextInput","Button","useExampleTheme","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","theme","Login","_Component","_inherits","props","_this","_classCallCheck","_callSuper","handleUserNameChange","text","setState","userName","handlePasswordChange","password","handleLogin","_this$state","state","console","log","_createClass","key","value","render","_this$state2","children","style","flex","justifyContent","width","alignSelf","label","onChangeText","secureTextEntry","mode","onPress","marginTop"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/login.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Component } from 'react';\r\nimport { View } from 'react-native';\r\nimport { TextInput, Button } from 'react-native-paper';\r\nimport { useExampleTheme } from '../index';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nconst theme = useExampleTheme();\r\n\r\ninterface LoginState {\r\n    userName: string;\r\n    password: string;\r\n}\r\n\r\nexport class Login extends Component<{}, LoginState> {\r\n    constructor(props: {}) {\r\n        super(props);\r\n        this.state = {\r\n            userName: '',\r\n            password: '',\r\n        };\r\n    }\r\n\r\n    handleUserNameChange = (text: string) => {\r\n        this.setState({ userName: text });\r\n    };\r\n\r\n    handlePasswordChange = (text: string) => {\r\n        this.setState({ password: text });\r\n    };\r\n\r\n    handleLogin = () => {\r\n        const { userName, password } = this.state;\r\n        // Aquí puedes implementar la lógica de inicio de sesión\r\n        console.log('Username:', userName);\r\n        console.log('Password:', password);\r\n    };\r\n\r\n    render() {\r\n        const { userName, password } = this.state;\r\n        return (\r\n            <ScreenWrapper>\r\n                <View style={{ flex: 1, justifyContent: 'center' }}>\r\n                <View style={{ width: '80%', alignSelf: 'center' }}>\r\n                    <TextInput\r\n                        label=\"Email\"\r\n                        value={userName}\r\n                        onChangeText={this.handleUserNameChange}\r\n                    />\r\n                    <TextInput\r\n                        label=\"Password\"\r\n                        value={password}\r\n                        secureTextEntry\r\n                        onChangeText={this.handlePasswordChange}\r\n                    />\r\n                    <Button mode=\"contained\" onPress={this.handleLogin} style={{ marginTop: 20 }}>\r\n                        Login\r\n                    </Button>\r\n                </View>\r\n            </View>\r\n            </ScreenWrapper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,SAAS,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAElC,SAASC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AACtD,SAASC,eAAe;AACxB,OAAOC,aAAa;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,KAAK,GAAGN,eAAe,CAAC,CAAC;AAO/B,WAAaO,KAAK,aAAAC,UAAA;EAAAC,SAAA,CAAAF,KAAA,EAAAC,UAAA;EACd,SAAAD,MAAYG,KAAS,EAAE;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAL,KAAA;IACnBI,KAAA,GAAAE,UAAA,OAAAN,KAAA,GAAMG,KAAK;IAAEC,KAAA,CAOjBG,oBAAoB,GAAG,UAACC,IAAY,EAAK;MACrCJ,KAAA,CAAKK,QAAQ,CAAC;QAAEC,QAAQ,EAAEF;MAAK,CAAC,CAAC;IACrC,CAAC;IAAAJ,KAAA,CAEDO,oBAAoB,GAAG,UAACH,IAAY,EAAK;MACrCJ,KAAA,CAAKK,QAAQ,CAAC;QAAEG,QAAQ,EAAEJ;MAAK,CAAC,CAAC;IACrC,CAAC;IAAAJ,KAAA,CAEDS,WAAW,GAAG,YAAM;MAChB,IAAAC,WAAA,GAA+BV,KAAA,CAAKW,KAAK;QAAjCL,QAAQ,GAAAI,WAAA,CAARJ,QAAQ;QAAEE,QAAQ,GAAAE,WAAA,CAARF,QAAQ;MAE1BI,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEP,QAAQ,CAAC;MAClCM,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,QAAQ,CAAC;IACtC,CAAC;IAnBGR,KAAA,CAAKW,KAAK,GAAG;MACTL,QAAQ,EAAE,EAAE;MACZE,QAAQ,EAAE;IACd,CAAC;IAAC,OAAAR,KAAA;EACN;EAACc,YAAA,CAAAlB,KAAA;IAAAmB,GAAA;IAAAC,KAAA,EAiBD,SAAAC,OAAA,EAAS;MACL,IAAAC,YAAA,GAA+B,IAAI,CAACP,KAAK;QAAjCL,QAAQ,GAAAY,YAAA,CAARZ,QAAQ;QAAEE,QAAQ,GAAAU,YAAA,CAARV,QAAQ;MAC1B,OACIhB,IAAA,CAACF,aAAa;QAAA6B,QAAA,EACV3B,IAAA,CAACN,IAAI;UAACkC,KAAK,EAAE;YAAEC,IAAI,EAAE,CAAC;YAAEC,cAAc,EAAE;UAAS,CAAE;UAAAH,QAAA,EACnDzB,KAAA,CAACR,IAAI;YAACkC,KAAK,EAAE;cAAEG,KAAK,EAAE,KAAK;cAAEC,SAAS,EAAE;YAAS,CAAE;YAAAL,QAAA,GAC/C3B,IAAA,CAACL,SAAS;cACNsC,KAAK,EAAC,OAAO;cACbT,KAAK,EAAEV,QAAS;cAChBoB,YAAY,EAAE,IAAI,CAACvB;YAAqB,CAC3C,CAAC,EACFX,IAAA,CAACL,SAAS;cACNsC,KAAK,EAAC,UAAU;cAChBT,KAAK,EAAER,QAAS;cAChBmB,eAAe;cACfD,YAAY,EAAE,IAAI,CAACnB;YAAqB,CAC3C,CAAC,EACFf,IAAA,CAACJ,MAAM;cAACwC,IAAI,EAAC,WAAW;cAACC,OAAO,EAAE,IAAI,CAACpB,WAAY;cAACW,KAAK,EAAE;gBAAEU,SAAS,EAAE;cAAG,CAAE;cAAAX,QAAA,EAAC;YAE9E,CAAQ,CAAC;UAAA,CACP;QAAC,CACL;MAAC,CACQ,CAAC;IAExB;EAAC;EAAA,OAAAvB,KAAA;AAAA,EAhDsBX,SAAS;AAmDpC,eAAeW,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}