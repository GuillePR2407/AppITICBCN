{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Checkbox, MD2Colors, MD3Colors, Paragraph, Text, TouchableRipple } from 'react-native-paper';\nimport { useExampleTheme } from \"../index\";\nimport ScreenWrapper from \"../ScreenWrapper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CheckboxExample = function CheckboxExample() {\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    checkedNormal = _React$useState2[0],\n    setCheckedNormal = _React$useState2[1];\n  var _React$useState3 = React.useState(true),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    checkedCustom = _React$useState4[0],\n    setCheckedCustom = _React$useState4[1];\n  var _React$useState5 = React.useState(true),\n    _React$useState6 = _slicedToArray(_React$useState5, 2),\n    indeterminate = _React$useState6[0],\n    setIndeterminate = _React$useState6[1];\n  var _useExampleTheme = useExampleTheme(),\n    isV3 = _useExampleTheme.isV3;\n  var TextComponent = isV3 ? Text : Paragraph;\n  return _jsxs(ScreenWrapper, {\n    style: styles.container,\n    children: [_jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return setCheckedNormal(!checkedNormal);\n      },\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(TextComponent, {\n          children: \"Normal\"\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(Checkbox, {\n            status: checkedNormal ? 'checked' : 'unchecked'\n          })\n        })]\n      })\n    }), _jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return setCheckedCustom(!checkedCustom);\n      },\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(TextComponent, {\n          children: \"Custom\"\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(Checkbox, {\n            color: isV3 ? MD3Colors.error70 : MD2Colors.blue500,\n            status: checkedCustom ? 'checked' : 'unchecked'\n          })\n        })]\n      })\n    }), _jsx(TouchableRipple, {\n      onPress: function onPress() {\n        return setIndeterminate(!indeterminate);\n      },\n      children: _jsxs(View, {\n        style: styles.row,\n        children: [_jsx(TextComponent, {\n          children: \"Indeterminate\"\n        }), _jsx(View, {\n          pointerEvents: \"none\",\n          children: _jsx(Checkbox, {\n            status: indeterminate ? 'indeterminate' : 'unchecked'\n          })\n        })]\n      })\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TextComponent, {\n        children: \"Checked (Disabled)\"\n      }), _jsx(Checkbox, {\n        status: \"checked\",\n        disabled: true\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TextComponent, {\n        children: \"Unchecked (Disabled)\"\n      }), _jsx(Checkbox, {\n        status: \"unchecked\",\n        disabled: true\n      })]\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(TextComponent, {\n        children: \"Indeterminate (Disabled)\"\n      }), _jsx(Checkbox, {\n        status: \"indeterminate\",\n        disabled: true\n      })]\n    })]\n  });\n};\nCheckboxExample.title = 'Checkbox';\nvar styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16\n  }\n});\nexport default CheckboxExample;","map":{"version":3,"names":["React","StyleSheet","View","Checkbox","MD2Colors","MD3Colors","Paragraph","Text","TouchableRipple","useExampleTheme","ScreenWrapper","jsx","_jsx","jsxs","_jsxs","CheckboxExample","_React$useState","useState","_React$useState2","_slicedToArray","checkedNormal","setCheckedNormal","_React$useState3","_React$useState4","checkedCustom","setCheckedCustom","_React$useState5","_React$useState6","indeterminate","setIndeterminate","_useExampleTheme","isV3","TextComponent","style","styles","container","children","onPress","row","pointerEvents","status","color","error70","blue500","disabled","title","create","paddingVertical","flexDirection","alignItems","justifyContent","paddingHorizontal"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Examples/CheckboxExample.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { StyleSheet, View } from 'react-native';\r\n\r\nimport {\r\n  Checkbox,\r\n  MD2Colors,\r\n  MD3Colors,\r\n  Paragraph,\r\n  Text,\r\n  TouchableRipple,\r\n} from 'react-native-paper';\r\n\r\nimport { useExampleTheme } from '../index';\r\nimport ScreenWrapper from '../ScreenWrapper';\r\n\r\nconst CheckboxExample = () => {\r\n  const [checkedNormal, setCheckedNormal] = React.useState<boolean>(true);\r\n  const [checkedCustom, setCheckedCustom] = React.useState<boolean>(true);\r\n  const [indeterminate, setIndeterminate] = React.useState<boolean>(true);\r\n\r\n  const { isV3 } = useExampleTheme();\r\n  const TextComponent = isV3 ? Text : Paragraph;\r\n\r\n  return (\r\n    <ScreenWrapper style={styles.container}>\r\n      <TouchableRipple onPress={() => setCheckedNormal(!checkedNormal)}>\r\n        <View style={styles.row}>\r\n          <TextComponent>Normal</TextComponent>\r\n          <View pointerEvents=\"none\">\r\n            <Checkbox status={checkedNormal ? 'checked' : 'unchecked'} />\r\n          </View>\r\n        </View>\r\n      </TouchableRipple>\r\n\r\n      <TouchableRipple onPress={() => setCheckedCustom(!checkedCustom)}>\r\n        <View style={styles.row}>\r\n          <TextComponent>Custom</TextComponent>\r\n          <View pointerEvents=\"none\">\r\n            <Checkbox\r\n              color={isV3 ? MD3Colors.error70 : MD2Colors.blue500}\r\n              status={checkedCustom ? 'checked' : 'unchecked'}\r\n            />\r\n          </View>\r\n        </View>\r\n      </TouchableRipple>\r\n\r\n      <TouchableRipple onPress={() => setIndeterminate(!indeterminate)}>\r\n        <View style={styles.row}>\r\n          <TextComponent>Indeterminate</TextComponent>\r\n          <View pointerEvents=\"none\">\r\n            <Checkbox status={indeterminate ? 'indeterminate' : 'unchecked'} />\r\n          </View>\r\n        </View>\r\n      </TouchableRipple>\r\n\r\n      <View style={styles.row}>\r\n        <TextComponent>Checked (Disabled)</TextComponent>\r\n        <Checkbox status=\"checked\" disabled />\r\n      </View>\r\n      <View style={styles.row}>\r\n        <TextComponent>Unchecked (Disabled)</TextComponent>\r\n        <Checkbox status=\"unchecked\" disabled />\r\n      </View>\r\n      <View style={styles.row}>\r\n        <TextComponent>Indeterminate (Disabled)</TextComponent>\r\n        <Checkbox status=\"indeterminate\" disabled />\r\n      </View>\r\n    </ScreenWrapper>\r\n  );\r\n};\r\n\r\nCheckboxExample.title = 'Checkbox';\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    paddingVertical: 8,\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between',\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n  },\r\n});\r\n\r\nexport default CheckboxExample;\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAG/B,SACEC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,IAAI,EACJC,eAAe,QACV,oBAAoB;AAE3B,SAASC,eAAe;AACxB,OAAOC,aAAa;AAAyB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7C,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;EAC5B,IAAAC,eAAA,GAA0ChB,KAAK,CAACiB,QAAQ,CAAU,IAAI,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAhEI,aAAa,GAAAF,gBAAA;IAAEG,gBAAgB,GAAAH,gBAAA;EACtC,IAAAI,gBAAA,GAA0CtB,KAAK,CAACiB,QAAQ,CAAU,IAAI,CAAC;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAhEE,aAAa,GAAAD,gBAAA;IAAEE,gBAAgB,GAAAF,gBAAA;EACtC,IAAAG,gBAAA,GAA0C1B,KAAK,CAACiB,QAAQ,CAAU,IAAI,CAAC;IAAAU,gBAAA,GAAAR,cAAA,CAAAO,gBAAA;IAAhEE,aAAa,GAAAD,gBAAA;IAAEE,gBAAgB,GAAAF,gBAAA;EAEtC,IAAAG,gBAAA,GAAiBrB,eAAe,CAAC,CAAC;IAA1BsB,IAAI,GAAAD,gBAAA,CAAJC,IAAI;EACZ,IAAMC,aAAa,GAAGD,IAAI,GAAGxB,IAAI,GAAGD,SAAS;EAE7C,OACEQ,KAAA,CAACJ,aAAa;IAACuB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GACrCxB,IAAA,CAACJ,eAAe;MAAC6B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMhB,gBAAgB,CAAC,CAACD,aAAa,CAAC;MAAA,CAAC;MAAAgB,QAAA,EAC/DtB,KAAA,CAACZ,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACI,GAAI;QAAAF,QAAA,GACtBxB,IAAA,CAACoB,aAAa;UAAAI,QAAA,EAAC;QAAM,CAAe,CAAC,EACrCxB,IAAA,CAACV,IAAI;UAACqC,aAAa,EAAC,MAAM;UAAAH,QAAA,EACxBxB,IAAA,CAACT,QAAQ;YAACqC,MAAM,EAAEpB,aAAa,GAAG,SAAS,GAAG;UAAY,CAAE;QAAC,CACzD,CAAC;MAAA,CACH;IAAC,CACQ,CAAC,EAElBR,IAAA,CAACJ,eAAe;MAAC6B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMZ,gBAAgB,CAAC,CAACD,aAAa,CAAC;MAAA,CAAC;MAAAY,QAAA,EAC/DtB,KAAA,CAACZ,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACI,GAAI;QAAAF,QAAA,GACtBxB,IAAA,CAACoB,aAAa;UAAAI,QAAA,EAAC;QAAM,CAAe,CAAC,EACrCxB,IAAA,CAACV,IAAI;UAACqC,aAAa,EAAC,MAAM;UAAAH,QAAA,EACxBxB,IAAA,CAACT,QAAQ;YACPsC,KAAK,EAAEV,IAAI,GAAG1B,SAAS,CAACqC,OAAO,GAAGtC,SAAS,CAACuC,OAAQ;YACpDH,MAAM,EAAEhB,aAAa,GAAG,SAAS,GAAG;UAAY,CACjD;QAAC,CACE,CAAC;MAAA,CACH;IAAC,CACQ,CAAC,EAElBZ,IAAA,CAACJ,eAAe;MAAC6B,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMR,gBAAgB,CAAC,CAACD,aAAa,CAAC;MAAA,CAAC;MAAAQ,QAAA,EAC/DtB,KAAA,CAACZ,IAAI;QAAC+B,KAAK,EAAEC,MAAM,CAACI,GAAI;QAAAF,QAAA,GACtBxB,IAAA,CAACoB,aAAa;UAAAI,QAAA,EAAC;QAAa,CAAe,CAAC,EAC5CxB,IAAA,CAACV,IAAI;UAACqC,aAAa,EAAC,MAAM;UAAAH,QAAA,EACxBxB,IAAA,CAACT,QAAQ;YAACqC,MAAM,EAAEZ,aAAa,GAAG,eAAe,GAAG;UAAY,CAAE;QAAC,CAC/D,CAAC;MAAA,CACH;IAAC,CACQ,CAAC,EAElBd,KAAA,CAACZ,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACI,GAAI;MAAAF,QAAA,GACtBxB,IAAA,CAACoB,aAAa;QAAAI,QAAA,EAAC;MAAkB,CAAe,CAAC,EACjDxB,IAAA,CAACT,QAAQ;QAACqC,MAAM,EAAC,SAAS;QAACI,QAAQ;MAAA,CAAE,CAAC;IAAA,CAClC,CAAC,EACP9B,KAAA,CAACZ,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACI,GAAI;MAAAF,QAAA,GACtBxB,IAAA,CAACoB,aAAa;QAAAI,QAAA,EAAC;MAAoB,CAAe,CAAC,EACnDxB,IAAA,CAACT,QAAQ;QAACqC,MAAM,EAAC,WAAW;QAACI,QAAQ;MAAA,CAAE,CAAC;IAAA,CACpC,CAAC,EACP9B,KAAA,CAACZ,IAAI;MAAC+B,KAAK,EAAEC,MAAM,CAACI,GAAI;MAAAF,QAAA,GACtBxB,IAAA,CAACoB,aAAa;QAAAI,QAAA,EAAC;MAAwB,CAAe,CAAC,EACvDxB,IAAA,CAACT,QAAQ;QAACqC,MAAM,EAAC,eAAe;QAACI,QAAQ;MAAA,CAAE,CAAC;IAAA,CACxC,CAAC;EAAA,CACM,CAAC;AAEpB,CAAC;AAED7B,eAAe,CAAC8B,KAAK,GAAG,UAAU;AAElC,IAAMX,MAAM,GAAGjC,UAAU,CAAC6C,MAAM,CAAC;EAC/BX,SAAS,EAAE;IACTY,eAAe,EAAE;EACnB,CAAC;EACDT,GAAG,EAAE;IACHU,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,eAAe;IAC/BH,eAAe,EAAE,CAAC;IAClBI,iBAAiB,EAAE;EACrB;AACF,CAAC,CAAC;AAEF,eAAepC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}