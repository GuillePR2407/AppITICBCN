{"ast":null,"code":"import * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { getHeaderTitle } from '@react-navigation/elements';\nimport { CardStyleInterpolators, createStackNavigator } from '@react-navigation/stack';\nimport { Appbar } from 'react-native-paper';\nimport ExampleList, { examples } from \"./ExampleList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function Root() {\n  var cardStyleInterpolator = Platform.OS === 'android' ? CardStyleInterpolators.forFadeFromBottomAndroid : CardStyleInterpolators.forHorizontalIOS;\n  return _jsxs(Stack.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        detachPreviousScreen: !navigation.isFocused(),\n        cardStyleInterpolator: cardStyleInterpolator,\n        header: function header(_ref2) {\n          var navigation = _ref2.navigation,\n            route = _ref2.route,\n            options = _ref2.options,\n            back = _ref2.back;\n          var title = getHeaderTitle(options, route.name);\n          return _jsxs(Appbar.Header, {\n            elevated: true,\n            children: [back ? _jsx(Appbar.BackAction, {\n              onPress: function onPress() {\n                return navigation.goBack();\n              }\n            }) : navigation.openDrawer ? _jsx(Appbar.Action, {\n              icon: \"menu\",\n              isLeading: true,\n              onPress: function onPress() {\n                return navigation.openDrawer();\n              }\n            }) : null, _jsx(Appbar.Content, {\n              title: title\n            })]\n          });\n        }\n      };\n    },\n    children: [_jsx(Stack.Screen, {\n      name: \"ExampleList\",\n      component: ExampleList,\n      options: {\n        title: 'Examples'\n      }\n    }), Object.keys(examples).map(function (id) {\n      return _jsx(Stack.Screen, {\n        name: id,\n        component: examples[id],\n        options: {\n          title: examples[id].title,\n          headerShown: id !== 'themingWithReactNavigation'\n        }\n      }, id);\n    })]\n  });\n}","map":{"version":3,"names":["React","Platform","getHeaderTitle","CardStyleInterpolators","createStackNavigator","Appbar","ExampleList","examples","jsx","_jsx","jsxs","_jsxs","Stack","Root","cardStyleInterpolator","OS","forFadeFromBottomAndroid","forHorizontalIOS","Navigator","screenOptions","_ref","navigation","detachPreviousScreen","isFocused","header","_ref2","route","options","back","title","name","Header","elevated","children","BackAction","onPress","goBack","openDrawer","Action","icon","isLeading","Content","Screen","component","Object","keys","map","id","headerShown"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/RootNavigator.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { Platform } from 'react-native';\r\n\r\nimport type { DrawerNavigationProp } from '@react-navigation/drawer';\r\nimport { getHeaderTitle } from '@react-navigation/elements';\r\nimport {\r\n  CardStyleInterpolators,\r\n  createStackNavigator,\r\n} from '@react-navigation/stack';\r\nimport { Appbar } from 'react-native-paper';\r\n\r\nimport ExampleList, { examples } from './ExampleList';\r\n\r\nconst Stack = createStackNavigator();\r\n\r\nexport default function Root() {\r\n  const cardStyleInterpolator =\r\n    Platform.OS === 'android'\r\n      ? CardStyleInterpolators.forFadeFromBottomAndroid\r\n      : CardStyleInterpolators.forHorizontalIOS;\r\n  return (\r\n    <Stack.Navigator\r\n      screenOptions={({ navigation }) => {\r\n        return {\r\n          detachPreviousScreen: !navigation.isFocused(),\r\n          cardStyleInterpolator,\r\n          header: ({ navigation, route, options, back }) => {\r\n            const title = getHeaderTitle(options, route.name);\r\n            return (\r\n              <Appbar.Header elevated>\r\n                {back ? (\r\n                  <Appbar.BackAction onPress={() => navigation.goBack()} />\r\n                ) : (navigation as any).openDrawer ? (\r\n                  <Appbar.Action\r\n                    icon=\"menu\"\r\n                    isLeading\r\n                    onPress={() =>\r\n                      (\r\n                        navigation as any as DrawerNavigationProp<{}>\r\n                      ).openDrawer()\r\n                    }\r\n                  />\r\n                ) : null}\r\n                <Appbar.Content title={title} />\r\n              </Appbar.Header>\r\n            );\r\n          },\r\n        };\r\n      }}\r\n    >\r\n      <Stack.Screen\r\n        name=\"ExampleList\"\r\n        component={ExampleList}\r\n        options={{\r\n          title: 'Examples',\r\n        }}\r\n      />\r\n      {(Object.keys(examples) as Array<keyof typeof examples>).map((id) => {\r\n        return (\r\n          <Stack.Screen\r\n            key={id}\r\n            name={id}\r\n            component={examples[id]}\r\n            options={{\r\n              title: examples[id].title,\r\n              headerShown: id !== 'themingWithReactNavigation',\r\n            }}\r\n          />\r\n        );\r\n      })}\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAAC,OAAAC,QAAA;AAI/B,SAASC,cAAc,QAAQ,4BAA4B;AAC3D,SACEC,sBAAsB,EACtBC,oBAAoB,QACf,yBAAyB;AAChC,SAASC,MAAM,QAAQ,oBAAoB;AAE3C,OAAOC,WAAW,IAAIC,QAAQ;AAAwB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEtD,IAAMC,KAAK,GAAGR,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASS,IAAIA,CAAA,EAAG;EAC7B,IAAMC,qBAAqB,GACzBb,QAAQ,CAACc,EAAE,KAAK,SAAS,GACrBZ,sBAAsB,CAACa,wBAAwB,GAC/Cb,sBAAsB,CAACc,gBAAgB;EAC7C,OACEN,KAAA,CAACC,KAAK,CAACM,SAAS;IACdC,aAAa,EAAE,SAAAA,cAAAC,IAAA,EAAoB;MAAA,IAAjBC,UAAU,GAAAD,IAAA,CAAVC,UAAU;MAC1B,OAAO;QACLC,oBAAoB,EAAE,CAACD,UAAU,CAACE,SAAS,CAAC,CAAC;QAC7CT,qBAAqB,EAArBA,qBAAqB;QACrBU,MAAM,EAAE,SAAAA,OAAAC,KAAA,EAA0C;UAAA,IAAvCJ,UAAU,GAAAI,KAAA,CAAVJ,UAAU;YAAEK,KAAK,GAAAD,KAAA,CAALC,KAAK;YAAEC,OAAO,GAAAF,KAAA,CAAPE,OAAO;YAAEC,IAAI,GAAAH,KAAA,CAAJG,IAAI;UACzC,IAAMC,KAAK,GAAG3B,cAAc,CAACyB,OAAO,EAAED,KAAK,CAACI,IAAI,CAAC;UACjD,OACEnB,KAAA,CAACN,MAAM,CAAC0B,MAAM;YAACC,QAAQ;YAAAC,QAAA,GACpBL,IAAI,GACHnB,IAAA,CAACJ,MAAM,CAAC6B,UAAU;cAACC,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAAMd,UAAU,CAACe,MAAM,CAAC,CAAC;cAAA;YAAC,CAAE,CAAC,GACtDf,UAAU,CAASgB,UAAU,GAChC5B,IAAA,CAACJ,MAAM,CAACiC,MAAM;cACZC,IAAI,EAAC,MAAM;cACXC,SAAS;cACTL,OAAO,EAAE,SAAAA,QAAA;gBAAA,OAELd,UAAU,CACVgB,UAAU,CAAC,CAAC;cAAA;YACf,CACF,CAAC,GACA,IAAI,EACR5B,IAAA,CAACJ,MAAM,CAACoC,OAAO;cAACZ,KAAK,EAAEA;YAAM,CAAE,CAAC;UAAA,CACnB,CAAC;QAEpB;MACF,CAAC;IACH,CAAE;IAAAI,QAAA,GAEFxB,IAAA,CAACG,KAAK,CAAC8B,MAAM;MACXZ,IAAI,EAAC,aAAa;MAClBa,SAAS,EAAErC,WAAY;MACvBqB,OAAO,EAAE;QACPE,KAAK,EAAE;MACT;IAAE,CACH,CAAC,EACAe,MAAM,CAACC,IAAI,CAACtC,QAAQ,CAAC,CAAkCuC,GAAG,CAAC,UAACC,EAAE,EAAK;MACnE,OACEtC,IAAA,CAACG,KAAK,CAAC8B,MAAM;QAEXZ,IAAI,EAAEiB,EAAG;QACTJ,SAAS,EAAEpC,QAAQ,CAACwC,EAAE,CAAE;QACxBpB,OAAO,EAAE;UACPE,KAAK,EAAEtB,QAAQ,CAACwC,EAAE,CAAC,CAAClB,KAAK;UACzBmB,WAAW,EAAED,EAAE,KAAK;QACtB;MAAE,GANGA,EAON,CAAC;IAEN,CAAC,CAAC;EAAA,CACa,CAAC;AAEtB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}