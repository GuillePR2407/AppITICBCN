{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { List, Text, IconButton } from 'react-native-paper';\nimport { getAllUsers, deleteUserByEmail } from \"../services/adminService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UsersSection = function UsersSection() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var _useState3 = useState(new Set()),\n    _useState4 = _slicedToArray(_useState3, 2),\n    expandedIds = _useState4[0],\n    setExpandedIds = _useState4[1];\n  var _React$useContext = React.useContext(PreferencesContext),\n    theme = _React$useContext.theme;\n  var handlePress = function handlePress(email) {\n    var newSet = new Set(expandedIds);\n    if (newSet.has(email)) {\n      newSet.delete(email);\n    } else {\n      newSet.add(email);\n    }\n    setExpandedIds(newSet);\n  };\n  var handleDelete = function () {\n    var _ref = _asyncToGenerator(function* (email) {\n      try {\n        yield deleteUserByEmail(email);\n        setUsers(users.filter(function (user) {\n          return user.email !== email;\n        }));\n      } catch (error) {\n        console.error('Error deleting user:', error);\n      }\n    });\n    return function handleDelete(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getAllUsers().then(setUsers).catch(console.error);\n  }, []);\n  return _jsx(ScrollView, {\n    style: {\n      padding: 20\n    },\n    children: users.map(function (user) {\n      return _jsx(View, {\n        style: {\n          backgroundColor: theme.colors.listItem,\n          margin: 15,\n          marginTop: 15,\n          marginBottom: 0,\n          borderRadius: 10,\n          shadowColor: \"#000\",\n          shadowOffset: {\n            width: 0,\n            height: 2\n          },\n          shadowOpacity: 0.23,\n          shadowRadius: 2.62,\n          elevation: 4\n        },\n        children: _jsxs(List.Accordion, {\n          title: user.username,\n          expanded: expandedIds.has(user.email),\n          onPress: function onPress() {\n            return handlePress(user.email);\n          },\n          style: {\n            backgroundColor: theme.colors.listItem,\n            borderRadius: 10,\n            borderBottomEndRadius: expandedIds.has(user.email) ? 0 : 10,\n            borderBottomStartRadius: expandedIds.has(user.email) ? 0 : 10\n          },\n          right: function right() {\n            return _jsx(IconButton, {\n              icon: \"delete\",\n              color: theme.colors.error,\n              onPress: function onPress() {\n                return handleDelete(user.email);\n              }\n            });\n          },\n          children: [_jsxs(Text, {\n            style: {\n              padding: 10,\n              color: theme.colors.primary,\n              fontSize: 18\n            },\n            children: [\"Email: \", user.email]\n          }), _jsxs(Text, {\n            style: {\n              padding: 10,\n              color: theme.colors.primary,\n              fontSize: 18\n            },\n            children: [\"Role: \", user.role.name]\n          })]\n        })\n      }, user.email);\n    })\n  });\n};\nexport default UsersSection;","map":{"version":3,"names":["React","useState","useEffect","ScrollView","View","List","Text","IconButton","getAllUsers","deleteUserByEmail","jsx","_jsx","jsxs","_jsxs","UsersSection","_useState","_useState2","_slicedToArray","users","setUsers","_useState3","Set","_useState4","expandedIds","setExpandedIds","_React$useContext","useContext","PreferencesContext","theme","handlePress","email","newSet","has","delete","add","handleDelete","_ref","_asyncToGenerator","filter","user","error","console","_x","apply","arguments","then","catch","style","padding","children","map","backgroundColor","colors","listItem","margin","marginTop","marginBottom","borderRadius","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","Accordion","title","username","expanded","onPress","borderBottomEndRadius","borderBottomStartRadius","right","icon","color","primary","fontSize","role","name"],"sources":["C:/Users/kikoj/Desktop/DAM/Projecte/AppITICBCN/M13_PROJECTE2/APPITICBCN/src/Sections/UsersSection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ScrollView, View } from 'react-native';\r\nimport { List, Text, IconButton, useTheme } from 'react-native-paper';\r\nimport { getAllUsers, deleteUserByEmail } from '../services/adminService';\r\n\r\nconst UsersSection = () => {\r\n    const [users, setUsers] = useState([]);\r\n    const [expandedIds, setExpandedIds] = useState(new Set());\r\n    const { theme } = React.useContext(PreferencesContext);\r\n\r\n    const handlePress = (email) => {\r\n        const newSet = new Set(expandedIds);\r\n        if (newSet.has(email)) {\r\n            newSet.delete(email);\r\n        } else {\r\n            newSet.add(email);\r\n        }\r\n        setExpandedIds(newSet);\r\n    };\r\n\r\n    const handleDelete = async (email) => {\r\n        try {\r\n            await deleteUserByEmail(email);\r\n            setUsers(users.filter(user => user.email !== email));\r\n        } catch (error) {\r\n            console.error('Error deleting user:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getAllUsers().then(setUsers).catch(console.error);\r\n    }, []);\r\n\r\n    return (\r\n        <ScrollView style={{ padding: 20 }}>\r\n            {users.map((user) => (\r\n                <View\r\n                    key={user.email}\r\n                    style={{\r\n                        backgroundColor: theme.colors.listItem,\r\n                        margin: 15,\r\n                        marginTop: 15,\r\n                        marginBottom: 0,\r\n                        borderRadius: 10,\r\n                        shadowColor: \"#000\",\r\n                        shadowOffset: { width: 0, height: 2 },\r\n                        shadowOpacity: 0.23,\r\n                        shadowRadius: 2.62,\r\n                        elevation: 4,\r\n                    }}\r\n                >\r\n                    <List.Accordion\r\n                        title={user.username}\r\n                        expanded={expandedIds.has(user.email)}\r\n                        onPress={() => handlePress(user.email)}\r\n                        style={{\r\n                            backgroundColor: theme.colors.listItem,\r\n                            borderRadius: 10,\r\n                            borderBottomEndRadius: expandedIds.has(user.email) ? 0 : 10,\r\n                            borderBottomStartRadius: expandedIds.has(user.email) ? 0 : 10,\r\n                        }}\r\n                        right={() => (\r\n                            <IconButton\r\n                                icon=\"delete\"\r\n                                color={theme.colors.error}\r\n                                onPress={() => handleDelete(user.email)}\r\n                            />\r\n                        )}\r\n                    >\r\n                        <Text style={{ padding: 10, color: theme.colors.primary, fontSize: 18 }}>\r\n                            Email: {user.email}\r\n                        </Text>\r\n                        <Text style={{ padding: 10, color: theme.colors.primary, fontSize: 18 }}>\r\n                            Role: {user.role.name}\r\n                        </Text>\r\n                    </List.Accordion>\r\n                </View>\r\n            ))}\r\n        </ScrollView>\r\n    );\r\n}\r\n\r\nexport default UsersSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}