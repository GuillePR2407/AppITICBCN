{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput, Button } from 'react-native-paper';\nimport { useExampleTheme } from \"./index\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var theme = useExampleTheme();\n  var height = theme.isV3 ? 80 : 56;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    userName = _useState2[0],\n    setUserName = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleLogin = function handleLogin() {\n    console.log('Username:', userName);\n    console.log('Password:', password);\n  };\n  var handleGoogleLogin = function handleGoogleLogin() {\n    Alert.alert('Login con Google', 'Implementa la lógica para iniciar sesión con Google');\n  };\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center'\n    },\n    children: _jsxs(View, {\n      style: {\n        width: '80%',\n        alignSelf: 'center'\n      },\n      children: [_jsx(TextInput, {\n        label: \"Email\",\n        value: userName,\n        onChangeText: setUserName\n      }), _jsx(TextInput, {\n        label: \"Password\",\n        value: password,\n        secureTextEntry: true,\n        onChangeText: setPassword\n      }), _jsx(Button, {\n        mode: \"contained\",\n        onPress: handleLogin,\n        style: {\n          marginTop: 20,\n          height: height\n        },\n        children: \"Login\"\n      }), _jsx(TouchableOpacity, {\n        onPress: handleGoogleLogin,\n        style: {\n          marginTop: 10\n        },\n        children: _jsxs(GoogleSVG, {\n          children: [\"width=\", 200, \"height=\", 200]\n        })\n      })]\n    })\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","View","Alert","TouchableOpacity","TextInput","Button","useExampleTheme","jsx","_jsx","jsxs","_jsxs","Login","theme","height","isV3","_useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","password","setPassword","handleLogin","console","log","handleGoogleLogin","alert","style","flex","justifyContent","children","width","alignSelf","label","value","onChangeText","secureTextEntry","mode","onPress","marginTop","GoogleSVG"],"sources":["C:/Users/Guille/Desktop/M13_PROJECTE2/APPITICBCN/src/login.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Alert, Image, TouchableOpacity } from 'react-native';\r\nimport { TextInput, Button } from 'react-native-paper';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\n// Utilizando hooks para el tema, asumiendo que es exportado desde './index'.\r\n// Este es solo un ejemplo; ajusta el uso del tema según sea necesario.\r\nimport { useExampleTheme } from './index';\r\n\r\n// Importa la imagen de Google\r\n\r\nconst Login = () => {\r\n    const theme = useExampleTheme();\r\n    // Asumiendo que isV3 es una propiedad del tema para determinar estilos\r\n    const height = theme.isV3 ? 80 : 56;\r\n\r\n    const [userName, setUserName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const handleLogin = () => {\r\n        // Implementa aquí la lógica de inicio de sesión\r\n        console.log('Username:', userName);\r\n        console.log('Password:', password);\r\n    };\r\n\r\n    const handleGoogleLogin = () => {\r\n        // Aquí puedes implementar la lógica para iniciar sesión con Google\r\n        Alert.alert('Login con Google', 'Implementa la lógica para iniciar sesión con Google');\r\n    };\r\n\r\n    return (\r\n        <View style={{ flex: 1, justifyContent: 'center' }}>\r\n            <View style={{ width: '80%', alignSelf: 'center' }}>\r\n                <TextInput\r\n                    label=\"Email\"\r\n                    value={userName}\r\n                    onChangeText={setUserName} // Actualiza directamente el estado con el valor del input\r\n                />\r\n                <TextInput\r\n                    label=\"Password\"\r\n                    value={password}\r\n                    secureTextEntry\r\n                    onChangeText={setPassword} // Igual que arriba, actualiza directamente el estado\r\n                />\r\n                <Button mode=\"contained\" onPress={handleLogin} style={{ marginTop: 20, height }}>\r\n                    Login\r\n                </Button>\r\n                <TouchableOpacity onPress={handleGoogleLogin} style={{ marginTop: 10 }}>\r\n                    <GoogleSVG>\r\n                        width={200}\r\n                        height={200}\r\n                    </GoogleSVG>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,gBAAA;AAExC,SAASC,SAAS,EAAEC,MAAM,QAAQ,oBAAoB;AAKtD,SAASC,eAAe;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI1C,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAChB,IAAMC,KAAK,GAAGN,eAAe,CAAC,CAAC;EAE/B,IAAMO,MAAM,GAAGD,KAAK,CAACE,IAAI,GAAG,EAAE,GAAG,EAAE;EAEnC,IAAAC,SAAA,GAAgCf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAC5B,IAAAI,UAAA,GAAgCpB,QAAQ,CAAC,EAAE,CAAC;IAAAqB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArCE,QAAQ,GAAAD,UAAA;IAAEE,WAAW,GAAAF,UAAA;EAE5B,IAAMG,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IAEtBC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAER,QAAQ,CAAC;IAClCO,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEJ,QAAQ,CAAC;EACtC,CAAC;EAED,IAAMK,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAA,EAAS;IAE5BzB,KAAK,CAAC0B,KAAK,CAAC,kBAAkB,EAAE,qDAAqD,CAAC;EAC1F,CAAC;EAED,OACIpB,IAAA,CAACP,IAAI;IAAC4B,KAAK,EAAE;MAAEC,IAAI,EAAE,CAAC;MAAEC,cAAc,EAAE;IAAS,CAAE;IAAAC,QAAA,EAC/CtB,KAAA,CAACT,IAAI;MAAC4B,KAAK,EAAE;QAAEI,KAAK,EAAE,KAAK;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,GAC/CxB,IAAA,CAACJ,SAAS;QACN+B,KAAK,EAAC,OAAO;QACbC,KAAK,EAAElB,QAAS;QAChBmB,YAAY,EAAElB;MAAY,CAC7B,CAAC,EACFX,IAAA,CAACJ,SAAS;QACN+B,KAAK,EAAC,UAAU;QAChBC,KAAK,EAAEd,QAAS;QAChBgB,eAAe;QACfD,YAAY,EAAEd;MAAY,CAC7B,CAAC,EACFf,IAAA,CAACH,MAAM;QAACkC,IAAI,EAAC,WAAW;QAACC,OAAO,EAAEhB,WAAY;QAACK,KAAK,EAAE;UAAEY,SAAS,EAAE,EAAE;UAAE5B,MAAM,EAANA;QAAO,CAAE;QAAAmB,QAAA,EAAC;MAEjF,CAAQ,CAAC,EACTxB,IAAA,CAACL,gBAAgB;QAACqC,OAAO,EAAEb,iBAAkB;QAACE,KAAK,EAAE;UAAEY,SAAS,EAAE;QAAG,CAAE;QAAAT,QAAA,EACnEtB,KAAA,CAACgC,SAAS;UAAAV,QAAA,GAAC,QACD,EAAC,GAAG,EAAC,SACJ,EAAC,GAAG;QAAA,CACJ;MAAC,CACE,CAAC;IAAA,CACjB;EAAC,CACL,CAAC;AAEf,CAAC;AAED,eAAerB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}